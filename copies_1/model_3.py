import torch
class M3(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 20, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(20)
		self.c0003_1 = torch.nn.BatchNorm1d(20)
		self.c0004_1 = torch.nn.Conv1d(20, 47, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(47)
		self.c0005_1 = torch.nn.Conv1d(47, 47, (7,), (1,), (3,), (1,), 47, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(47)
		self.c0006_1 = torch.nn.Conv1d(47, 20, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.BatchNorm1d(20)
		self.c0007_1 = torch.nn.BatchNorm1d(20)
		self.c0008_1 = torch.nn.Conv1d(20, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(63)
		self.c0009_1 = torch.nn.Conv1d(63, 63, (7,), (1,), (3,), (1,), 63, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(63)
		self.c000a_1 = torch.nn.Conv1d(63, 20, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.BatchNorm1d(20)
		self.c000b_1 = torch.nn.BatchNorm1d(20)
		self.c000c_1 = torch.nn.Conv1d(20, 27, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(27)
		self.c000d_1 = torch.nn.BatchNorm1d(27)
		self.c000e_1 = torch.nn.Conv1d(27, 97, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(97)
		self.c000f_1 = torch.nn.Conv1d(97, 97, (7,), (1,), (3,), (1,), 97, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(97)
		self.c0010_1 = torch.nn.Conv1d(97, 27, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.BatchNorm1d(27)
		self.c0011_1 = torch.nn.BatchNorm1d(27)
		self.c0012_1 = torch.nn.Conv1d(27, 80, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(80)
		self.c0013_1 = torch.nn.Conv1d(80, 80, (7,), (1,), (3,), (1,), 80, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(80)
		self.c0014_1 = torch.nn.Conv1d(80, 27, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.BatchNorm1d(27)
		self.c0015_1 = torch.nn.BatchNorm1d(27)
		self.c0016_1 = torch.nn.Conv1d(27, 61, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(61)
		self.c0017_1 = torch.nn.Conv1d(61, 61, (7,), (1,), (3,), (1,), 61, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(61)
		self.c0018_1 = torch.nn.Conv1d(61, 27, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.BatchNorm1d(27)
		self.c0019_1 = torch.nn.BatchNorm1d(27)
		self.c001a_1 = torch.nn.Conv1d(27, 81, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(81)
		self.c001b_1 = torch.nn.Conv1d(81, 81, (7,), (1,), (3,), (1,), 81, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(81)
		self.c001c_1 = torch.nn.Conv1d(81, 27, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.BatchNorm1d(27)
		self.c001d_1 = torch.nn.BatchNorm1d(27)
		self.c001e_1 = torch.nn.Conv1d(27, 55, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(55)
		self.c001f_1 = torch.nn.Conv1d(55, 55, (7,), (1,), (3,), (1,), 55, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(55)
		self.c0020_1 = torch.nn.Conv1d(55, 27, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(27)
		self.c0021_1 = torch.nn.BatchNorm1d(27)
		self.c0022_1 = torch.nn.Conv1d(27, 21, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(21)
		self.c0023_1 = torch.nn.Conv1d(21, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(16)
		self.c0024_1 = torch.nn.BatchNorm1d(16)
		self.c0025_1 = torch.nn.Conv1d(16, 27, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(27)
		self.c0026_1 = torch.nn.BatchNorm1d(27)
		self.c0027_1 = torch.nn.Conv1d(27, 34, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(34)
		self.c0028_1 = torch.nn.Conv1d(34, 34, (7,), (1,), (3,), (1,), 34, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(34)
		self.c0029_1 = torch.nn.Conv1d(34, 27, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.BatchNorm1d(27)
		self.c002a_1 = torch.nn.BatchNorm1d(27)
		self.c002b_1 = torch.nn.Conv1d(27, 38, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(38)
		self.c002c_1 = torch.nn.BatchNorm1d(38)
		self.c002d_1 = torch.nn.Conv1d(38, 77, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.ReLU6()
		self.c002d_3 = torch.nn.BatchNorm1d(77)
		self.c002e_1 = torch.nn.Conv1d(77, 77, (7,), (1,), (3,), (1,), 77, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.ReLU6()
		self.c002e_3 = torch.nn.BatchNorm1d(77)
		self.c002f_1 = torch.nn.Conv1d(77, 38, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.BatchNorm1d(38)
		self.c0030_1 = torch.nn.BatchNorm1d(38)
		self.c0031_1 = torch.nn.Conv1d(38, 38, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.ReLU6()
		self.c0031_3 = torch.nn.BatchNorm1d(38)
		self.c0032_1 = torch.nn.Conv1d(38, 62, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.ReLU6()
		self.c0032_3 = torch.nn.BatchNorm1d(62)
		self.c0033_1 = torch.nn.Linear(62, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2560)
		r0001 = self.c0003_1(r0001.view(-1, 20, 128)).view(-1, 2560)
		r0002 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 20, 128)))).view(-1, 6016)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0002.view(-1, 47, 128)))).view(-1, 6016)
		r0002 = self.c0006_2(self.c0006_1(r0002.view(-1, 47, 128))).view(-1, 2560)
		r0002 = self.c0007_1((r0001 + r0002).view(-1, 20, 128)).view(-1, 2560)
		r0001 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 20, 128)))).view(-1, 8064)
		r0001 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 63, 128)))).view(-1, 8064)
		r0001 = self.c000a_2(self.c000a_1(r0001.view(-1, 63, 128))).view(-1, 2560)
		r0001 = self.c000b_1((r0002 + r0001).view(-1, 20, 128)).view(-1, 2560)
		r0001 = self.c000c_3(self.c000c_2(self.c000c_1(r0001.view(-1, 20, 128)))).view(-1, 1728)
		r0001 = self.c000d_1(r0001.view(-1, 27, 64)).view(-1, 1728)
		r0002 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 27, 64)))).view(-1, 6208)
		r0002 = self.c000f_3(self.c000f_2(self.c000f_1(r0002.view(-1, 97, 64)))).view(-1, 6208)
		r0002 = self.c0010_2(self.c0010_1(r0002.view(-1, 97, 64))).view(-1, 1728)
		r0002 = self.c0011_1((r0001 + r0002).view(-1, 27, 64)).view(-1, 1728)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0002.view(-1, 27, 64)))).view(-1, 5120)
		r0001 = self.c0013_3(self.c0013_2(self.c0013_1(r0001.view(-1, 80, 64)))).view(-1, 5120)
		r0001 = self.c0014_2(self.c0014_1(r0001.view(-1, 80, 64))).view(-1, 1728)
		r0001 = self.c0015_1((r0002 + r0001).view(-1, 27, 64)).view(-1, 1728)
		r0002 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 27, 64)))).view(-1, 3904)
		r0002 = self.c0017_3(self.c0017_2(self.c0017_1(r0002.view(-1, 61, 64)))).view(-1, 3904)
		r0002 = self.c0018_2(self.c0018_1(r0002.view(-1, 61, 64))).view(-1, 1728)
		r0002 = self.c0019_1((r0001 + r0002).view(-1, 27, 64)).view(-1, 1728)
		r0001 = self.c001a_3(self.c001a_2(self.c001a_1(r0002.view(-1, 27, 64)))).view(-1, 5184)
		r0001 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 81, 64)))).view(-1, 5184)
		r0001 = self.c001c_2(self.c001c_1(r0001.view(-1, 81, 64))).view(-1, 1728)
		r0001 = self.c001d_1((r0002 + r0001).view(-1, 27, 64)).view(-1, 1728)
		r0002 = self.c001e_3(self.c001e_2(self.c001e_1(r0001.view(-1, 27, 64)))).view(-1, 3520)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 55, 64)))).view(-1, 3520)
		r0002 = self.c0020_2(self.c0020_1(r0002.view(-1, 55, 64))).view(-1, 1728)
		r0002 = self.c0021_1((r0001 + r0002).view(-1, 27, 64)).view(-1, 1728)
		r0002 = self.c0022_3(self.c0022_2(self.c0022_1(r0002.view(-1, 27, 64)))).view(-1, 672)
		r0002 = self.c0023_3(self.c0023_2(self.c0023_1(r0002.view(-1, 21, 32)))).view(-1, 256)
		r0002 = self.c0024_1(r0002.view(-1, 16, 16)).view(-1, 256)
		r0002 = self.c0025_3(self.c0025_2(self.c0025_1(r0002.view(-1, 16, 16)))).view(-1, 216)
		r0002 = self.c0026_1(r0002.view(-1, 27, 8)).view(-1, 216)
		r0001 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 27, 8)))).view(-1, 272)
		r0001 = self.c0028_3(self.c0028_2(self.c0028_1(r0001.view(-1, 34, 8)))).view(-1, 272)
		r0001 = self.c0029_2(self.c0029_1(r0001.view(-1, 34, 8))).view(-1, 216)
		r0001 = self.c002a_1((r0002 + r0001).view(-1, 27, 8)).view(-1, 216)
		r0001 = self.c002b_3(self.c002b_2(self.c002b_1(r0001.view(-1, 27, 8)))).view(-1, 152)
		r0001 = self.c002c_1(r0001.view(-1, 38, 4)).view(-1, 152)
		r0002 = self.c002d_3(self.c002d_2(self.c002d_1(r0001.view(-1, 38, 4)))).view(-1, 308)
		r0002 = self.c002e_3(self.c002e_2(self.c002e_1(r0002.view(-1, 77, 4)))).view(-1, 308)
		r0002 = self.c002f_2(self.c002f_1(r0002.view(-1, 77, 4))).view(-1, 152)
		r0002 = self.c0030_1((r0001 + r0002).view(-1, 38, 4)).view(-1, 152)
		r0002 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 38, 4)))).view(-1, 76)
		r0002 = self.c0032_3(self.c0032_2(self.c0032_1(r0002.view(-1, 38, 2)))).view(-1, 62)
		r0002 = self.c0033_1(r0002)
		return r0002