import torch
class M1(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(16)
		self.c0003_1 = torch.nn.BatchNorm1d(16)
		self.c0004_1 = torch.nn.Conv1d(16, 53, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(53)
		self.c0005_1 = torch.nn.Conv1d(53, 53, (7,), (1,), (3,), (1,), 53, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(53)
		self.c0006_1 = torch.nn.Conv1d(53, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.BatchNorm1d(16)
		self.c0007_1 = torch.nn.BatchNorm1d(16)
		self.c0008_1 = torch.nn.Conv1d(16, 46, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(46)
		self.c0009_1 = torch.nn.Conv1d(46, 46, (7,), (1,), (3,), (1,), 46, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(46)
		self.c000a_1 = torch.nn.Conv1d(46, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.BatchNorm1d(16)
		self.c000b_1 = torch.nn.BatchNorm1d(16)
		self.c000c_1 = torch.nn.Conv1d(16, 18, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(18)
		self.c000d_1 = torch.nn.Conv1d(18, 18, (7,), (1,), (3,), (1,), 18, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(18)
		self.c000e_1 = torch.nn.Conv1d(18, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.BatchNorm1d(16)
		self.c000f_1 = torch.nn.BatchNorm1d(16)
		self.c0010_1 = torch.nn.Conv1d(16, 24, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(24)
		self.c0011_1 = torch.nn.Conv1d(24, 24, (7,), (1,), (3,), (1,), 24, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(24)
		self.c0012_1 = torch.nn.Conv1d(24, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(16)
		self.c0013_1 = torch.nn.BatchNorm1d(16)
		self.c0014_1 = torch.nn.Conv1d(16, 31, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(31)
		self.c0015_1 = torch.nn.Conv1d(31, 31, (7,), (1,), (3,), (1,), 31, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(31)
		self.c0016_1 = torch.nn.Conv1d(31, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.BatchNorm1d(16)
		self.c0017_1 = torch.nn.BatchNorm1d(16)
		self.c0018_1 = torch.nn.Conv1d(16, 30, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(30)
		self.c0019_1 = torch.nn.BatchNorm1d(30)
		self.c001a_1 = torch.nn.Conv1d(30, 88, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(88)
		self.c001b_1 = torch.nn.Conv1d(88, 88, (7,), (1,), (3,), (1,), 88, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(88)
		self.c001c_1 = torch.nn.Conv1d(88, 30, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.BatchNorm1d(30)
		self.c001d_1 = torch.nn.BatchNorm1d(30)
		self.c001e_1 = torch.nn.Conv1d(30, 30, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(30)
		self.c001f_1 = torch.nn.Conv1d(30, 30, (7,), (1,), (3,), (1,), 30, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(30)
		self.c0020_1 = torch.nn.Conv1d(30, 30, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(30)
		self.c0021_1 = torch.nn.BatchNorm1d(30)
		self.c0022_1 = torch.nn.Conv1d(30, 100, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(100)
		self.c0023_1 = torch.nn.Conv1d(100, 100, (7,), (1,), (3,), (1,), 100, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(100)
		self.c0024_1 = torch.nn.Conv1d(100, 30, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.BatchNorm1d(30)
		self.c0025_1 = torch.nn.BatchNorm1d(30)
		self.c0026_1 = torch.nn.Conv1d(30, 74, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.ReLU6()
		self.c0026_3 = torch.nn.BatchNorm1d(74)
		self.c0027_1 = torch.nn.Conv1d(74, 74, (7,), (1,), (3,), (1,), 74, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(74)
		self.c0028_1 = torch.nn.Conv1d(74, 30, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.BatchNorm1d(30)
		self.c0029_1 = torch.nn.BatchNorm1d(30)
		self.c002a_1 = torch.nn.Conv1d(30, 46, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.ReLU6()
		self.c002a_3 = torch.nn.BatchNorm1d(46)
		self.c002b_1 = torch.nn.BatchNorm1d(46)
		self.c002c_1 = torch.nn.Conv1d(46, 91, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(91)
		self.c002d_1 = torch.nn.Conv1d(91, 120, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.ReLU6()
		self.c002d_3 = torch.nn.BatchNorm1d(120)
		self.c002e_1 = torch.nn.BatchNorm1d(120)
		self.c002f_1 = torch.nn.Conv1d(120, 172, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(172)
		self.c0030_1 = torch.nn.BatchNorm1d(172)
		self.c0031_1 = torch.nn.Conv1d(172, 172, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.ReLU6()
		self.c0031_3 = torch.nn.BatchNorm1d(172)
		self.c0032_1 = torch.nn.Conv1d(172, 119, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.ReLU6()
		self.c0032_3 = torch.nn.BatchNorm1d(119)
		self.c0033_1 = torch.nn.Linear(119, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2048)
		r0001 = self.c0003_1(r0001.view(-1, 16, 128)).view(-1, 2048)
		r0002 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 16, 128)))).view(-1, 6784)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0002.view(-1, 53, 128)))).view(-1, 6784)
		r0002 = self.c0006_2(self.c0006_1(r0002.view(-1, 53, 128))).view(-1, 2048)
		r0002 = self.c0007_1((r0001 + r0002).view(-1, 16, 128)).view(-1, 2048)
		r0001 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 16, 128)))).view(-1, 5888)
		r0001 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 46, 128)))).view(-1, 5888)
		r0001 = self.c000a_2(self.c000a_1(r0001.view(-1, 46, 128))).view(-1, 2048)
		r0001 = self.c000b_1((r0002 + r0001).view(-1, 16, 128)).view(-1, 2048)
		r0002 = self.c000c_3(self.c000c_2(self.c000c_1(r0001.view(-1, 16, 128)))).view(-1, 2304)
		r0002 = self.c000d_3(self.c000d_2(self.c000d_1(r0002.view(-1, 18, 128)))).view(-1, 2304)
		r0002 = self.c000e_2(self.c000e_1(r0002.view(-1, 18, 128))).view(-1, 2048)
		r0002 = self.c000f_1((r0001 + r0002).view(-1, 16, 128)).view(-1, 2048)
		r0001 = self.c0010_3(self.c0010_2(self.c0010_1(r0002.view(-1, 16, 128)))).view(-1, 3072)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 24, 128)))).view(-1, 3072)
		r0001 = self.c0012_2(self.c0012_1(r0001.view(-1, 24, 128))).view(-1, 2048)
		r0001 = self.c0013_1((r0002 + r0001).view(-1, 16, 128)).view(-1, 2048)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0001.view(-1, 16, 128)))).view(-1, 3968)
		r0002 = self.c0015_3(self.c0015_2(self.c0015_1(r0002.view(-1, 31, 128)))).view(-1, 3968)
		r0002 = self.c0016_2(self.c0016_1(r0002.view(-1, 31, 128))).view(-1, 2048)
		r0002 = self.c0017_1((r0001 + r0002).view(-1, 16, 128)).view(-1, 2048)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0002.view(-1, 16, 128)))).view(-1, 1920)
		r0002 = self.c0019_1(r0002.view(-1, 30, 64)).view(-1, 1920)
		r0001 = self.c001a_3(self.c001a_2(self.c001a_1(r0002.view(-1, 30, 64)))).view(-1, 5632)
		r0001 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 88, 64)))).view(-1, 5632)
		r0001 = self.c001c_2(self.c001c_1(r0001.view(-1, 88, 64))).view(-1, 1920)
		r0001 = self.c001d_1((r0002 + r0001).view(-1, 30, 64)).view(-1, 1920)
		r0002 = self.c001e_3(self.c001e_2(self.c001e_1(r0001.view(-1, 30, 64)))).view(-1, 1920)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 30, 64)))).view(-1, 1920)
		r0002 = self.c0020_2(self.c0020_1(r0002.view(-1, 30, 64))).view(-1, 1920)
		r0002 = self.c0021_1((r0001 + r0002).view(-1, 30, 64)).view(-1, 1920)
		r0001 = self.c0022_3(self.c0022_2(self.c0022_1(r0002.view(-1, 30, 64)))).view(-1, 6400)
		r0001 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 100, 64)))).view(-1, 6400)
		r0001 = self.c0024_2(self.c0024_1(r0001.view(-1, 100, 64))).view(-1, 1920)
		r0001 = self.c0025_1((r0002 + r0001).view(-1, 30, 64)).view(-1, 1920)
		r0002 = self.c0026_3(self.c0026_2(self.c0026_1(r0001.view(-1, 30, 64)))).view(-1, 4736)
		r0002 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 74, 64)))).view(-1, 4736)
		r0002 = self.c0028_2(self.c0028_1(r0002.view(-1, 74, 64))).view(-1, 1920)
		r0002 = self.c0029_1((r0001 + r0002).view(-1, 30, 64)).view(-1, 1920)
		r0002 = self.c002a_3(self.c002a_2(self.c002a_1(r0002.view(-1, 30, 64)))).view(-1, 1472)
		r0002 = self.c002b_1(r0002.view(-1, 46, 32)).view(-1, 1472)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 46, 32)))).view(-1, 1456)
		r0002 = self.c002d_3(self.c002d_2(self.c002d_1(r0002.view(-1, 91, 16)))).view(-1, 960)
		r0002 = self.c002e_1(r0002.view(-1, 120, 8)).view(-1, 960)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 120, 8)))).view(-1, 688)
		r0002 = self.c0030_1(r0002.view(-1, 172, 4)).view(-1, 688)
		r0002 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 172, 4)))).view(-1, 344)
		r0002 = self.c0032_3(self.c0032_2(self.c0032_1(r0002.view(-1, 172, 2)))).view(-1, 119)
		r0002 = self.c0033_1(r0002)
		return r0002