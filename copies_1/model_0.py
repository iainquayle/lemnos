import torch
class M0(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 24, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(24)
		self.c0003_1 = torch.nn.BatchNorm1d(24)
		self.c0004_1 = torch.nn.Conv1d(24, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(37)
		self.c0005_1 = torch.nn.Conv1d(37, 37, (7,), (1,), (3,), (1,), 37, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(37)
		self.c0006_1 = torch.nn.Conv1d(37, 24, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.BatchNorm1d(24)
		self.c0007_1 = torch.nn.BatchNorm1d(24)
		self.c0008_1 = torch.nn.Conv1d(24, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(16)
		self.c0009_1 = torch.nn.BatchNorm1d(16)
		self.c000a_1 = torch.nn.Conv1d(16, 64, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(64)
		self.c000b_1 = torch.nn.Conv1d(64, 64, (7,), (1,), (3,), (1,), 64, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(64)
		self.c000c_1 = torch.nn.Conv1d(64, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.BatchNorm1d(16)
		self.c000d_1 = torch.nn.BatchNorm1d(16)
		self.c000e_1 = torch.nn.Conv1d(16, 24, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(24)
		self.c000f_1 = torch.nn.Conv1d(24, 24, (7,), (1,), (3,), (1,), 24, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(24)
		self.c0010_1 = torch.nn.Conv1d(24, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.BatchNorm1d(16)
		self.c0011_1 = torch.nn.BatchNorm1d(16)
		self.c0012_1 = torch.nn.Conv1d(16, 24, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(24)
		self.c0013_1 = torch.nn.Conv1d(24, 24, (7,), (1,), (3,), (1,), 24, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(24)
		self.c0014_1 = torch.nn.Conv1d(24, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.BatchNorm1d(16)
		self.c0015_1 = torch.nn.BatchNorm1d(16)
		self.c0016_1 = torch.nn.Conv1d(16, 31, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(31)
		self.c0017_1 = torch.nn.BatchNorm1d(31)
		self.c0018_1 = torch.nn.Conv1d(31, 75, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(75)
		self.c0019_1 = torch.nn.Conv1d(75, 75, (7,), (1,), (3,), (1,), 75, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(75)
		self.c001a_1 = torch.nn.Conv1d(75, 31, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.BatchNorm1d(31)
		self.c001b_1 = torch.nn.BatchNorm1d(31)
		self.c001c_1 = torch.nn.Conv1d(31, 85, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(85)
		self.c001d_1 = torch.nn.Conv1d(85, 85, (7,), (1,), (3,), (1,), 85, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.ReLU6()
		self.c001d_3 = torch.nn.BatchNorm1d(85)
		self.c001e_1 = torch.nn.Conv1d(85, 31, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.BatchNorm1d(31)
		self.c001f_1 = torch.nn.BatchNorm1d(31)
		self.c0020_1 = torch.nn.Conv1d(31, 50, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(50)
		self.c0021_1 = torch.nn.Conv1d(50, 20, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(20)
		self.c0022_1 = torch.nn.BatchNorm1d(20)
		self.c0023_1 = torch.nn.Conv1d(20, 31, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(31)
		self.c0024_1 = torch.nn.BatchNorm1d(31)
		self.c0025_1 = torch.nn.Conv1d(31, 50, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(50)
		self.c0026_1 = torch.nn.Conv1d(50, 50, (7,), (1,), (3,), (1,), 50, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.ReLU6()
		self.c0026_3 = torch.nn.BatchNorm1d(50)
		self.c0027_1 = torch.nn.Conv1d(50, 31, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.BatchNorm1d(31)
		self.c0028_1 = torch.nn.BatchNorm1d(31)
		self.c0029_1 = torch.nn.Conv1d(31, 38, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.ReLU6()
		self.c0029_3 = torch.nn.BatchNorm1d(38)
		self.c002a_1 = torch.nn.Conv1d(38, 38, (7,), (1,), (3,), (1,), 38, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.ReLU6()
		self.c002a_3 = torch.nn.BatchNorm1d(38)
		self.c002b_1 = torch.nn.Conv1d(38, 31, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.BatchNorm1d(31)
		self.c002c_1 = torch.nn.BatchNorm1d(31)
		self.c002d_1 = torch.nn.Conv1d(31, 33, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.ReLU6()
		self.c002d_3 = torch.nn.BatchNorm1d(33)
		self.c002e_1 = torch.nn.BatchNorm1d(33)
		self.c002f_1 = torch.nn.Conv1d(33, 64, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(64)
		self.c0030_1 = torch.nn.Linear(64, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 3072)
		r0001 = self.c0003_1(r0001.view(-1, 24, 128)).view(-1, 3072)
		r0002 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 24, 128)))).view(-1, 4736)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0002.view(-1, 37, 128)))).view(-1, 4736)
		r0002 = self.c0006_2(self.c0006_1(r0002.view(-1, 37, 128))).view(-1, 3072)
		r0002 = self.c0007_1((r0001 + r0002).view(-1, 24, 128)).view(-1, 3072)
		r0002 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 24, 128)))).view(-1, 1024)
		r0002 = self.c0009_1(r0002.view(-1, 16, 64)).view(-1, 1024)
		r0001 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 16, 64)))).view(-1, 4096)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0001.view(-1, 64, 64)))).view(-1, 4096)
		r0001 = self.c000c_2(self.c000c_1(r0001.view(-1, 64, 64))).view(-1, 1024)
		r0001 = self.c000d_1((r0002 + r0001).view(-1, 16, 64)).view(-1, 1024)
		r0002 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 16, 64)))).view(-1, 1536)
		r0002 = self.c000f_3(self.c000f_2(self.c000f_1(r0002.view(-1, 24, 64)))).view(-1, 1536)
		r0002 = self.c0010_2(self.c0010_1(r0002.view(-1, 24, 64))).view(-1, 1024)
		r0002 = self.c0011_1((r0001 + r0002).view(-1, 16, 64)).view(-1, 1024)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0002.view(-1, 16, 64)))).view(-1, 1536)
		r0001 = self.c0013_3(self.c0013_2(self.c0013_1(r0001.view(-1, 24, 64)))).view(-1, 1536)
		r0001 = self.c0014_2(self.c0014_1(r0001.view(-1, 24, 64))).view(-1, 1024)
		r0001 = self.c0015_1((r0002 + r0001).view(-1, 16, 64)).view(-1, 1024)
		r0001 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 16, 64)))).view(-1, 992)
		r0001 = self.c0017_1(r0001.view(-1, 31, 32)).view(-1, 992)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 31, 32)))).view(-1, 2400)
		r0002 = self.c0019_3(self.c0019_2(self.c0019_1(r0002.view(-1, 75, 32)))).view(-1, 2400)
		r0002 = self.c001a_2(self.c001a_1(r0002.view(-1, 75, 32))).view(-1, 992)
		r0002 = self.c001b_1((r0001 + r0002).view(-1, 31, 32)).view(-1, 992)
		r0001 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 31, 32)))).view(-1, 2720)
		r0001 = self.c001d_3(self.c001d_2(self.c001d_1(r0001.view(-1, 85, 32)))).view(-1, 2720)
		r0001 = self.c001e_2(self.c001e_1(r0001.view(-1, 85, 32))).view(-1, 992)
		r0001 = self.c001f_1((r0002 + r0001).view(-1, 31, 32)).view(-1, 992)
		r0001 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 31, 32)))).view(-1, 800)
		r0001 = self.c0021_3(self.c0021_2(self.c0021_1(r0001.view(-1, 50, 16)))).view(-1, 160)
		r0001 = self.c0022_1(r0001.view(-1, 20, 8)).view(-1, 160)
		r0001 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 20, 8)))).view(-1, 124)
		r0001 = self.c0024_1(r0001.view(-1, 31, 4)).view(-1, 124)
		r0002 = self.c0025_3(self.c0025_2(self.c0025_1(r0001.view(-1, 31, 4)))).view(-1, 200)
		r0002 = self.c0026_3(self.c0026_2(self.c0026_1(r0002.view(-1, 50, 4)))).view(-1, 200)
		r0002 = self.c0027_2(self.c0027_1(r0002.view(-1, 50, 4))).view(-1, 124)
		r0002 = self.c0028_1((r0001 + r0002).view(-1, 31, 4)).view(-1, 124)
		r0001 = self.c0029_3(self.c0029_2(self.c0029_1(r0002.view(-1, 31, 4)))).view(-1, 152)
		r0001 = self.c002a_3(self.c002a_2(self.c002a_1(r0001.view(-1, 38, 4)))).view(-1, 152)
		r0001 = self.c002b_2(self.c002b_1(r0001.view(-1, 38, 4))).view(-1, 124)
		r0001 = self.c002c_1((r0002 + r0001).view(-1, 31, 4)).view(-1, 124)
		r0001 = self.c002d_3(self.c002d_2(self.c002d_1(r0001.view(-1, 31, 4)))).view(-1, 66)
		r0001 = self.c002e_1(r0001.view(-1, 33, 2)).view(-1, 66)
		r0001 = self.c002f_3(self.c002f_2(self.c002f_1(r0001.view(-1, 33, 2)))).view(-1, 64)
		r0001 = self.c0030_1(r0001)
		return r0001