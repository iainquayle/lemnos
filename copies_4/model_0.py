import torch
class M0(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 26, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.SiLU()
		self.c0002_3 = torch.nn.BatchNorm1d(26)
		self.c0003_1 = torch.nn.BatchNorm1d(26)
		self.c0004_1 = torch.nn.Conv1d(26, 39, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.SiLU()
		self.c0004_3 = torch.nn.BatchNorm1d(39)
		self.c0005_1 = torch.nn.BatchNorm1d(39)
		self.c0006_1 = torch.nn.Conv1d(39, 137, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(137)
		self.c0007_1 = torch.nn.Conv1d(137, 137, (5,), (1,), (2,), (1,), 137, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(137)
		self.c0008_1 = torch.nn.Conv1d(137, 39, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.BatchNorm1d(39)
		self.c0009_1 = torch.nn.BatchNorm1d(39)
		self.c000a_1 = torch.nn.Conv1d(39, 63, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.SiLU()
		self.c000a_3 = torch.nn.BatchNorm1d(63)
		self.c000b_1 = torch.nn.BatchNorm1d(63)
		self.c000c_1 = torch.nn.Conv1d(63, 72, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(72)
		self.c000d_1 = torch.nn.Conv1d(72, 72, (5,), (1,), (2,), (1,), 72, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(72)
		self.c000e_1 = torch.nn.Conv1d(72, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.BatchNorm1d(63)
		self.c000f_1 = torch.nn.BatchNorm1d(63)
		self.c0010_1 = torch.nn.Conv1d(63, 189, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(189)
		self.c0011_1 = torch.nn.Conv1d(189, 189, (5,), (1,), (2,), (1,), 189, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(189)
		self.c0012_1 = torch.nn.Conv1d(189, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(63)
		self.c0013_1 = torch.nn.BatchNorm1d(63)
		self.c0014_1 = torch.nn.Conv1d(63, 215, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(215)
		self.c0015_1 = torch.nn.Conv1d(215, 215, (5,), (1,), (2,), (1,), 215, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(215)
		self.c0016_1 = torch.nn.Conv1d(215, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.BatchNorm1d(63)
		self.c0017_1 = torch.nn.BatchNorm1d(63)
		self.c0018_1 = torch.nn.Conv1d(63, 93, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(93)
		self.c0019_1 = torch.nn.Conv1d(93, 93, (5,), (1,), (2,), (1,), 93, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(93)
		self.c001a_1 = torch.nn.Conv1d(93, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.BatchNorm1d(63)
		self.c001b_1 = torch.nn.BatchNorm1d(63)
		self.c001c_1 = torch.nn.Conv1d(63, 184, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(184)
		self.c001d_1 = torch.nn.Conv1d(184, 184, (5,), (1,), (2,), (1,), 184, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.ReLU6()
		self.c001d_3 = torch.nn.BatchNorm1d(184)
		self.c001e_1 = torch.nn.Conv1d(184, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.BatchNorm1d(63)
		self.c001f_1 = torch.nn.BatchNorm1d(63)
		self.c0020_1 = torch.nn.Conv1d(63, 180, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(180)
		self.c0021_1 = torch.nn.Conv1d(180, 180, (5,), (1,), (2,), (1,), 180, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(180)
		self.c0022_1 = torch.nn.Conv1d(180, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.BatchNorm1d(63)
		self.c0023_1 = torch.nn.BatchNorm1d(63)
		self.c0024_1 = torch.nn.Conv1d(63, 244, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(244)
		self.c0025_1 = torch.nn.Conv1d(244, 244, (5,), (1,), (2,), (1,), 244, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(244)
		self.c0026_1 = torch.nn.Conv1d(244, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.BatchNorm1d(63)
		self.c0027_1 = torch.nn.BatchNorm1d(63)
		self.c0028_1 = torch.nn.Conv1d(63, 187, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(187)
		self.c0029_1 = torch.nn.Conv1d(187, 187, (5,), (1,), (2,), (1,), 187, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.ReLU6()
		self.c0029_3 = torch.nn.BatchNorm1d(187)
		self.c002a_1 = torch.nn.Conv1d(187, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.BatchNorm1d(63)
		self.c002b_1 = torch.nn.BatchNorm1d(63)
		self.c002c_1 = torch.nn.Conv1d(63, 32, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.SiLU()
		self.c002c_3 = torch.nn.BatchNorm1d(32)
		self.c002d_1 = torch.nn.BatchNorm1d(32)
		self.c002e_1 = torch.nn.Conv1d(32, 44, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.SiLU()
		self.c002e_3 = torch.nn.BatchNorm1d(44)
		self.c002f_1 = torch.nn.Conv1d(44, 63, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.SiLU()
		self.c002f_3 = torch.nn.BatchNorm1d(63)
		self.c0030_1 = torch.nn.BatchNorm1d(63)
		self.c0031_1 = torch.nn.Conv1d(63, 42, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.SiLU()
		self.c0031_3 = torch.nn.BatchNorm1d(42)
		self.c0032_1 = torch.nn.Conv1d(42, 17, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.SiLU()
		self.c0032_3 = torch.nn.BatchNorm1d(17)
		self.c0033_1 = torch.nn.Linear(17, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 3328)
		r0001 = self.c0003_1(r0001.view(-1, 26, 128)).view(-1, 3328)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 26, 128)))).view(-1, 2496)
		r0001 = self.c0005_1(r0001.view(-1, 39, 64)).view(-1, 2496)
		r0002 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 39, 64)))).view(-1, 8768)
		r0002 = self.c0007_3(self.c0007_2(self.c0007_1(r0002.view(-1, 137, 64)))).view(-1, 8768)
		r0002 = self.c0008_2(self.c0008_1(r0002.view(-1, 137, 64))).view(-1, 2496)
		r0002 = self.c0009_1((r0001 + r0002).view(-1, 39, 64)).view(-1, 2496)
		r0002 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 39, 64)))).view(-1, 2016)
		r0002 = self.c000b_1(r0002.view(-1, 63, 32)).view(-1, 2016)
		r0001 = self.c000c_3(self.c000c_2(self.c000c_1(r0002.view(-1, 63, 32)))).view(-1, 2304)
		r0001 = self.c000d_3(self.c000d_2(self.c000d_1(r0001.view(-1, 72, 32)))).view(-1, 2304)
		r0001 = self.c000e_2(self.c000e_1(r0001.view(-1, 72, 32))).view(-1, 2016)
		r0001 = self.c000f_1((r0002 + r0001).view(-1, 63, 32)).view(-1, 2016)
		r0002 = self.c0010_3(self.c0010_2(self.c0010_1(r0001.view(-1, 63, 32)))).view(-1, 6048)
		r0002 = self.c0011_3(self.c0011_2(self.c0011_1(r0002.view(-1, 189, 32)))).view(-1, 6048)
		r0002 = self.c0012_2(self.c0012_1(r0002.view(-1, 189, 32))).view(-1, 2016)
		r0002 = self.c0013_1((r0001 + r0002).view(-1, 63, 32)).view(-1, 2016)
		r0001 = self.c0014_3(self.c0014_2(self.c0014_1(r0002.view(-1, 63, 32)))).view(-1, 6880)
		r0001 = self.c0015_3(self.c0015_2(self.c0015_1(r0001.view(-1, 215, 32)))).view(-1, 6880)
		r0001 = self.c0016_2(self.c0016_1(r0001.view(-1, 215, 32))).view(-1, 2016)
		r0001 = self.c0017_1((r0002 + r0001).view(-1, 63, 32)).view(-1, 2016)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 63, 32)))).view(-1, 2976)
		r0002 = self.c0019_3(self.c0019_2(self.c0019_1(r0002.view(-1, 93, 32)))).view(-1, 2976)
		r0002 = self.c001a_2(self.c001a_1(r0002.view(-1, 93, 32))).view(-1, 2016)
		r0002 = self.c001b_1((r0001 + r0002).view(-1, 63, 32)).view(-1, 2016)
		r0001 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 63, 32)))).view(-1, 5888)
		r0001 = self.c001d_3(self.c001d_2(self.c001d_1(r0001.view(-1, 184, 32)))).view(-1, 5888)
		r0001 = self.c001e_2(self.c001e_1(r0001.view(-1, 184, 32))).view(-1, 2016)
		r0001 = self.c001f_1((r0002 + r0001).view(-1, 63, 32)).view(-1, 2016)
		r0002 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 63, 32)))).view(-1, 5760)
		r0002 = self.c0021_3(self.c0021_2(self.c0021_1(r0002.view(-1, 180, 32)))).view(-1, 5760)
		r0002 = self.c0022_2(self.c0022_1(r0002.view(-1, 180, 32))).view(-1, 2016)
		r0002 = self.c0023_1((r0001 + r0002).view(-1, 63, 32)).view(-1, 2016)
		r0001 = self.c0024_3(self.c0024_2(self.c0024_1(r0002.view(-1, 63, 32)))).view(-1, 7808)
		r0001 = self.c0025_3(self.c0025_2(self.c0025_1(r0001.view(-1, 244, 32)))).view(-1, 7808)
		r0001 = self.c0026_2(self.c0026_1(r0001.view(-1, 244, 32))).view(-1, 2016)
		r0001 = self.c0027_1((r0002 + r0001).view(-1, 63, 32)).view(-1, 2016)
		r0002 = self.c0028_3(self.c0028_2(self.c0028_1(r0001.view(-1, 63, 32)))).view(-1, 5984)
		r0002 = self.c0029_3(self.c0029_2(self.c0029_1(r0002.view(-1, 187, 32)))).view(-1, 5984)
		r0002 = self.c002a_2(self.c002a_1(r0002.view(-1, 187, 32))).view(-1, 2016)
		r0002 = self.c002b_1((r0001 + r0002).view(-1, 63, 32)).view(-1, 2016)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 63, 32)))).view(-1, 512)
		r0002 = self.c002d_1(r0002.view(-1, 32, 16)).view(-1, 512)
		r0002 = self.c002e_3(self.c002e_2(self.c002e_1(r0002.view(-1, 32, 16)))).view(-1, 352)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 44, 8)))).view(-1, 252)
		r0002 = self.c0030_1(r0002.view(-1, 63, 4)).view(-1, 252)
		r0002 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 63, 4)))).view(-1, 84)
		r0002 = self.c0032_3(self.c0032_2(self.c0032_1(r0002.view(-1, 42, 2)))).view(-1, 17)
		r0002 = self.c0033_1(r0002)
		return r0002