import torch
class M1(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 19, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.SiLU()
		self.c0002_3 = torch.nn.BatchNorm1d(19)
		self.c0003_1 = torch.nn.BatchNorm1d(19)
		self.c0004_1 = torch.nn.Conv1d(19, 35, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.SiLU()
		self.c0004_3 = torch.nn.BatchNorm1d(35)
		self.c0005_1 = torch.nn.BatchNorm1d(35)
		self.c0006_1 = torch.nn.Conv1d(35, 123, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(123)
		self.c0007_1 = torch.nn.Conv1d(123, 123, (5,), (1,), (2,), (1,), 123, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(123)
		self.c0008_1 = torch.nn.Conv1d(123, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.BatchNorm1d(35)
		self.c0009_1 = torch.nn.BatchNorm1d(35)
		self.c000a_1 = torch.nn.Conv1d(35, 56, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(56)
		self.c000b_1 = torch.nn.Conv1d(56, 56, (5,), (1,), (2,), (1,), 56, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(56)
		self.c000c_1 = torch.nn.Conv1d(56, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.BatchNorm1d(35)
		self.c000d_1 = torch.nn.BatchNorm1d(35)
		self.c000e_1 = torch.nn.Conv1d(35, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(73)
		self.c000f_1 = torch.nn.Conv1d(73, 73, (5,), (1,), (2,), (1,), 73, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(73)
		self.c0010_1 = torch.nn.Conv1d(73, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.BatchNorm1d(35)
		self.c0011_1 = torch.nn.BatchNorm1d(35)
		self.c0012_1 = torch.nn.Conv1d(35, 74, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(74)
		self.c0013_1 = torch.nn.Conv1d(74, 74, (5,), (1,), (2,), (1,), 74, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(74)
		self.c0014_1 = torch.nn.Conv1d(74, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.BatchNorm1d(35)
		self.c0015_1 = torch.nn.BatchNorm1d(35)
		self.c0016_1 = torch.nn.Conv1d(35, 58, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(58)
		self.c0017_1 = torch.nn.Conv1d(58, 58, (5,), (1,), (2,), (1,), 58, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(58)
		self.c0018_1 = torch.nn.Conv1d(58, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.BatchNorm1d(35)
		self.c0019_1 = torch.nn.BatchNorm1d(35)
		self.c001a_1 = torch.nn.Conv1d(35, 96, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(96)
		self.c001b_1 = torch.nn.Conv1d(96, 96, (5,), (1,), (2,), (1,), 96, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(96)
		self.c001c_1 = torch.nn.Conv1d(96, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.BatchNorm1d(35)
		self.c001d_1 = torch.nn.BatchNorm1d(35)
		self.c001e_1 = torch.nn.Conv1d(35, 94, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(94)
		self.c001f_1 = torch.nn.Conv1d(94, 94, (5,), (1,), (2,), (1,), 94, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(94)
		self.c0020_1 = torch.nn.Conv1d(94, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(35)
		self.c0021_1 = torch.nn.BatchNorm1d(35)
		self.c0022_1 = torch.nn.Conv1d(35, 59, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(59)
		self.c0023_1 = torch.nn.Conv1d(59, 59, (5,), (1,), (2,), (1,), 59, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(59)
		self.c0024_1 = torch.nn.Conv1d(59, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.BatchNorm1d(35)
		self.c0025_1 = torch.nn.BatchNorm1d(35)
		self.c0026_1 = torch.nn.Conv1d(35, 130, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.ReLU6()
		self.c0026_3 = torch.nn.BatchNorm1d(130)
		self.c0027_1 = torch.nn.Conv1d(130, 130, (5,), (1,), (2,), (1,), 130, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(130)
		self.c0028_1 = torch.nn.Conv1d(130, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.BatchNorm1d(35)
		self.c0029_1 = torch.nn.BatchNorm1d(35)
		self.c002a_1 = torch.nn.Conv1d(35, 63, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.SiLU()
		self.c002a_3 = torch.nn.BatchNorm1d(63)
		self.c002b_1 = torch.nn.Conv1d(63, 124, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.SiLU()
		self.c002b_3 = torch.nn.BatchNorm1d(124)
		self.c002c_1 = torch.nn.BatchNorm1d(124)
		self.c002d_1 = torch.nn.Conv1d(124, 222, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.SiLU()
		self.c002d_3 = torch.nn.BatchNorm1d(222)
		self.c002e_1 = torch.nn.BatchNorm1d(222)
		self.c002f_1 = torch.nn.Conv1d(222, 187, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.SiLU()
		self.c002f_3 = torch.nn.BatchNorm1d(187)
		self.c0030_1 = torch.nn.Conv1d(187, 187, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.SiLU()
		self.c0030_3 = torch.nn.BatchNorm1d(187)
		self.c0031_1 = torch.nn.Conv1d(187, 197, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.SiLU()
		self.c0031_3 = torch.nn.BatchNorm1d(197)
		self.c0032_1 = torch.nn.Linear(197, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2432)
		r0001 = self.c0003_1(r0001.view(-1, 19, 128)).view(-1, 2432)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 19, 128)))).view(-1, 2240)
		r0001 = self.c0005_1(r0001.view(-1, 35, 64)).view(-1, 2240)
		r0002 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 35, 64)))).view(-1, 7872)
		r0002 = self.c0007_3(self.c0007_2(self.c0007_1(r0002.view(-1, 123, 64)))).view(-1, 7872)
		r0002 = self.c0008_2(self.c0008_1(r0002.view(-1, 123, 64))).view(-1, 2240)
		r0002 = self.c0009_1((r0001 + r0002).view(-1, 35, 64)).view(-1, 2240)
		r0001 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 35, 64)))).view(-1, 3584)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0001.view(-1, 56, 64)))).view(-1, 3584)
		r0001 = self.c000c_2(self.c000c_1(r0001.view(-1, 56, 64))).view(-1, 2240)
		r0001 = self.c000d_1((r0002 + r0001).view(-1, 35, 64)).view(-1, 2240)
		r0002 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 35, 64)))).view(-1, 4672)
		r0002 = self.c000f_3(self.c000f_2(self.c000f_1(r0002.view(-1, 73, 64)))).view(-1, 4672)
		r0002 = self.c0010_2(self.c0010_1(r0002.view(-1, 73, 64))).view(-1, 2240)
		r0002 = self.c0011_1((r0001 + r0002).view(-1, 35, 64)).view(-1, 2240)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0002.view(-1, 35, 64)))).view(-1, 4736)
		r0001 = self.c0013_3(self.c0013_2(self.c0013_1(r0001.view(-1, 74, 64)))).view(-1, 4736)
		r0001 = self.c0014_2(self.c0014_1(r0001.view(-1, 74, 64))).view(-1, 2240)
		r0001 = self.c0015_1((r0002 + r0001).view(-1, 35, 64)).view(-1, 2240)
		r0002 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 35, 64)))).view(-1, 3712)
		r0002 = self.c0017_3(self.c0017_2(self.c0017_1(r0002.view(-1, 58, 64)))).view(-1, 3712)
		r0002 = self.c0018_2(self.c0018_1(r0002.view(-1, 58, 64))).view(-1, 2240)
		r0002 = self.c0019_1((r0001 + r0002).view(-1, 35, 64)).view(-1, 2240)
		r0001 = self.c001a_3(self.c001a_2(self.c001a_1(r0002.view(-1, 35, 64)))).view(-1, 6144)
		r0001 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 96, 64)))).view(-1, 6144)
		r0001 = self.c001c_2(self.c001c_1(r0001.view(-1, 96, 64))).view(-1, 2240)
		r0001 = self.c001d_1((r0002 + r0001).view(-1, 35, 64)).view(-1, 2240)
		r0002 = self.c001e_3(self.c001e_2(self.c001e_1(r0001.view(-1, 35, 64)))).view(-1, 6016)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 94, 64)))).view(-1, 6016)
		r0002 = self.c0020_2(self.c0020_1(r0002.view(-1, 94, 64))).view(-1, 2240)
		r0002 = self.c0021_1((r0001 + r0002).view(-1, 35, 64)).view(-1, 2240)
		r0001 = self.c0022_3(self.c0022_2(self.c0022_1(r0002.view(-1, 35, 64)))).view(-1, 3776)
		r0001 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 59, 64)))).view(-1, 3776)
		r0001 = self.c0024_2(self.c0024_1(r0001.view(-1, 59, 64))).view(-1, 2240)
		r0001 = self.c0025_1((r0002 + r0001).view(-1, 35, 64)).view(-1, 2240)
		r0002 = self.c0026_3(self.c0026_2(self.c0026_1(r0001.view(-1, 35, 64)))).view(-1, 8320)
		r0002 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 130, 64)))).view(-1, 8320)
		r0002 = self.c0028_2(self.c0028_1(r0002.view(-1, 130, 64))).view(-1, 2240)
		r0002 = self.c0029_1((r0001 + r0002).view(-1, 35, 64)).view(-1, 2240)
		r0002 = self.c002a_3(self.c002a_2(self.c002a_1(r0002.view(-1, 35, 64)))).view(-1, 2016)
		r0002 = self.c002b_3(self.c002b_2(self.c002b_1(r0002.view(-1, 63, 32)))).view(-1, 1984)
		r0002 = self.c002c_1(r0002.view(-1, 124, 16)).view(-1, 1984)
		r0002 = self.c002d_3(self.c002d_2(self.c002d_1(r0002.view(-1, 124, 16)))).view(-1, 1776)
		r0002 = self.c002e_1(r0002.view(-1, 222, 8)).view(-1, 1776)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 222, 8)))).view(-1, 748)
		r0002 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 187, 4)))).view(-1, 374)
		r0002 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 187, 2)))).view(-1, 197)
		r0002 = self.c0032_1(r0002)
		return r0002