import torch
class M2(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.SiLU()
		self.c0002_3 = torch.nn.BatchNorm1d(16)
		self.c0003_1 = torch.nn.BatchNorm1d(16)
		self.c0004_1 = torch.nn.Conv1d(16, 32, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.SiLU()
		self.c0004_3 = torch.nn.BatchNorm1d(32)
		self.c0005_1 = torch.nn.BatchNorm1d(32)
		self.c0006_1 = torch.nn.Conv1d(32, 41, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(41)
		self.c0007_1 = torch.nn.Conv1d(41, 41, (5,), (1,), (2,), (1,), 41, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(41)
		self.c0008_1 = torch.nn.Conv1d(41, 32, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.BatchNorm1d(32)
		self.c0009_1 = torch.nn.BatchNorm1d(32)
		self.c000a_1 = torch.nn.Conv1d(32, 105, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(105)
		self.c000b_1 = torch.nn.Conv1d(105, 105, (5,), (1,), (2,), (1,), 105, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(105)
		self.c000c_1 = torch.nn.Conv1d(105, 32, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.BatchNorm1d(32)
		self.c000d_1 = torch.nn.BatchNorm1d(32)
		self.c000e_1 = torch.nn.Conv1d(32, 49, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.SiLU()
		self.c000e_3 = torch.nn.BatchNorm1d(49)
		self.c000f_1 = torch.nn.BatchNorm1d(49)
		self.c0010_1 = torch.nn.Conv1d(49, 22, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.SiLU()
		self.c0010_3 = torch.nn.BatchNorm1d(22)
		self.c0011_1 = torch.nn.BatchNorm1d(22)
		self.c0012_1 = torch.nn.Conv1d(22, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.SiLU()
		self.c0012_3 = torch.nn.BatchNorm1d(16)
		self.c0013_1 = torch.nn.BatchNorm1d(16)
		self.c0014_1 = torch.nn.Conv1d(16, 20, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.SiLU()
		self.c0014_3 = torch.nn.BatchNorm1d(20)
		self.c0015_1 = torch.nn.BatchNorm1d(20)
		self.c0016_1 = torch.nn.Conv1d(20, 37, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.SiLU()
		self.c0016_3 = torch.nn.BatchNorm1d(37)
		self.c0017_1 = torch.nn.BatchNorm1d(37)
		self.c0018_1 = torch.nn.Conv1d(37, 92, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(92)
		self.c0019_1 = torch.nn.Conv1d(92, 92, (5,), (1,), (2,), (1,), 92, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(92)
		self.c001a_1 = torch.nn.Conv1d(92, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.BatchNorm1d(37)
		self.c001b_1 = torch.nn.BatchNorm1d(37)
		self.c001c_1 = torch.nn.Conv1d(37, 98, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(98)
		self.c001d_1 = torch.nn.Conv1d(98, 98, (5,), (1,), (2,), (1,), 98, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.ReLU6()
		self.c001d_3 = torch.nn.BatchNorm1d(98)
		self.c001e_1 = torch.nn.Conv1d(98, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.BatchNorm1d(37)
		self.c001f_1 = torch.nn.BatchNorm1d(37)
		self.c0020_1 = torch.nn.Conv1d(37, 68, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(68)
		self.c0021_1 = torch.nn.Conv1d(68, 68, (5,), (1,), (2,), (1,), 68, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(68)
		self.c0022_1 = torch.nn.Conv1d(68, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.BatchNorm1d(37)
		self.c0023_1 = torch.nn.BatchNorm1d(37)
		self.c0024_1 = torch.nn.Conv1d(37, 42, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(42)
		self.c0025_1 = torch.nn.Conv1d(42, 42, (5,), (1,), (2,), (1,), 42, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(42)
		self.c0026_1 = torch.nn.Conv1d(42, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.BatchNorm1d(37)
		self.c0027_1 = torch.nn.BatchNorm1d(37)
		self.c0028_1 = torch.nn.Conv1d(37, 72, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(72)
		self.c0029_1 = torch.nn.Conv1d(72, 72, (5,), (1,), (2,), (1,), 72, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.ReLU6()
		self.c0029_3 = torch.nn.BatchNorm1d(72)
		self.c002a_1 = torch.nn.Conv1d(72, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.BatchNorm1d(37)
		self.c002b_1 = torch.nn.BatchNorm1d(37)
		self.c002c_1 = torch.nn.Conv1d(37, 75, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(75)
		self.c002d_1 = torch.nn.Conv1d(75, 75, (5,), (1,), (2,), (1,), 75, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.ReLU6()
		self.c002d_3 = torch.nn.BatchNorm1d(75)
		self.c002e_1 = torch.nn.Conv1d(75, 37, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.BatchNorm1d(37)
		self.c002f_1 = torch.nn.BatchNorm1d(37)
		self.c0030_1 = torch.nn.Conv1d(37, 38, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.SiLU()
		self.c0030_3 = torch.nn.BatchNorm1d(38)
		self.c0031_1 = torch.nn.BatchNorm1d(38)
		self.c0032_1 = torch.nn.Linear(38, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2048)
		r0001 = self.c0003_1(r0001.view(-1, 16, 128)).view(-1, 2048)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 16, 128)))).view(-1, 2048)
		r0001 = self.c0005_1(r0001.view(-1, 32, 64)).view(-1, 2048)
		r0002 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 32, 64)))).view(-1, 2624)
		r0002 = self.c0007_3(self.c0007_2(self.c0007_1(r0002.view(-1, 41, 64)))).view(-1, 2624)
		r0002 = self.c0008_2(self.c0008_1(r0002.view(-1, 41, 64))).view(-1, 2048)
		r0002 = self.c0009_1((r0001 + r0002).view(-1, 32, 64)).view(-1, 2048)
		r0001 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 32, 64)))).view(-1, 6720)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0001.view(-1, 105, 64)))).view(-1, 6720)
		r0001 = self.c000c_2(self.c000c_1(r0001.view(-1, 105, 64))).view(-1, 2048)
		r0001 = self.c000d_1((r0002 + r0001).view(-1, 32, 64)).view(-1, 2048)
		r0001 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 32, 64)))).view(-1, 1568)
		r0001 = self.c000f_1(r0001.view(-1, 49, 32)).view(-1, 1568)
		r0001 = self.c0010_3(self.c0010_2(self.c0010_1(r0001.view(-1, 49, 32)))).view(-1, 352)
		r0001 = self.c0011_1(r0001.view(-1, 22, 16)).view(-1, 352)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0001.view(-1, 22, 16)))).view(-1, 128)
		r0001 = self.c0013_1(r0001.view(-1, 16, 8)).view(-1, 128)
		r0001 = self.c0014_3(self.c0014_2(self.c0014_1(r0001.view(-1, 16, 8)))).view(-1, 80)
		r0001 = self.c0015_1(r0001.view(-1, 20, 4)).view(-1, 80)
		r0001 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 20, 4)))).view(-1, 74)
		r0001 = self.c0017_1(r0001.view(-1, 37, 2)).view(-1, 74)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 37, 2)))).view(-1, 184)
		r0002 = self.c0019_3(self.c0019_2(self.c0019_1(r0002.view(-1, 92, 2)))).view(-1, 184)
		r0002 = self.c001a_2(self.c001a_1(r0002.view(-1, 92, 2))).view(-1, 74)
		r0002 = self.c001b_1((r0001 + r0002).view(-1, 37, 2)).view(-1, 74)
		r0001 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 37, 2)))).view(-1, 196)
		r0001 = self.c001d_3(self.c001d_2(self.c001d_1(r0001.view(-1, 98, 2)))).view(-1, 196)
		r0001 = self.c001e_2(self.c001e_1(r0001.view(-1, 98, 2))).view(-1, 74)
		r0001 = self.c001f_1((r0002 + r0001).view(-1, 37, 2)).view(-1, 74)
		r0002 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 37, 2)))).view(-1, 136)
		r0002 = self.c0021_3(self.c0021_2(self.c0021_1(r0002.view(-1, 68, 2)))).view(-1, 136)
		r0002 = self.c0022_2(self.c0022_1(r0002.view(-1, 68, 2))).view(-1, 74)
		r0002 = self.c0023_1((r0001 + r0002).view(-1, 37, 2)).view(-1, 74)
		r0001 = self.c0024_3(self.c0024_2(self.c0024_1(r0002.view(-1, 37, 2)))).view(-1, 84)
		r0001 = self.c0025_3(self.c0025_2(self.c0025_1(r0001.view(-1, 42, 2)))).view(-1, 84)
		r0001 = self.c0026_2(self.c0026_1(r0001.view(-1, 42, 2))).view(-1, 74)
		r0001 = self.c0027_1((r0002 + r0001).view(-1, 37, 2)).view(-1, 74)
		r0002 = self.c0028_3(self.c0028_2(self.c0028_1(r0001.view(-1, 37, 2)))).view(-1, 144)
		r0002 = self.c0029_3(self.c0029_2(self.c0029_1(r0002.view(-1, 72, 2)))).view(-1, 144)
		r0002 = self.c002a_2(self.c002a_1(r0002.view(-1, 72, 2))).view(-1, 74)
		r0002 = self.c002b_1((r0001 + r0002).view(-1, 37, 2)).view(-1, 74)
		r0001 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 37, 2)))).view(-1, 150)
		r0001 = self.c002d_3(self.c002d_2(self.c002d_1(r0001.view(-1, 75, 2)))).view(-1, 150)
		r0001 = self.c002e_2(self.c002e_1(r0001.view(-1, 75, 2))).view(-1, 74)
		r0001 = self.c002f_1((r0002 + r0001).view(-1, 37, 2)).view(-1, 74)
		r0001 = self.c0030_3(self.c0030_2(self.c0030_1(r0001.view(-1, 37, 2)))).view(-1, 38)
		r0001 = self.c0031_1(r0001.view(-1, 38, 1)).view(-1, 38)
		r0001 = self.c0032_1(r0001)
		return r0001