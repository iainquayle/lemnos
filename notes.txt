problems:
changes:
	guarenteed:
		refactorings:
			clean namings
				transitions to edges perhaps
				linear growth to perhaps scaling
			adapters, split up and fix any naming
				make more standard naming
				perhaps use a mapping instead of the if else chain
				switch fully to a portable contained formatter
			fix jank in sample collection
			add vertical spacing to code, looks fine in nvim but vsc is disgusting
		impl max pool
		make tests for breeding
		impl a screening on the ir, allow for culling on structural heuristics
	possible:
		allow none to be entered for shape bounds, then just inherit the dimensionality of the input
		look into whther each node should be able to create its own class? 
			or perhaps there is a way to be more flexible on the meta programming side of things
			ie, allow nodes to create multiple members and decide how they are used in the forward pass
				(probably better than making new classes for each)
		review whther more work can be done together with the conformance gathering and tracker mutation passes
			ie, caching the conformance gathering information and use it for tracker mutation if valid
		may be the case that mutable priorities are not actually needed? since it pops the top of the stack in any case
			check this on Unet example
		add optional shape bounds to transitions, not to be conformed to but allow more flexibility in defining when to use transitions
			may need to make "add group" take an explicit iterable instead of a arg list
			it seems to always be possible to work around, but would be easier to not
		add a divisor option to the clamp val on shape bounds
		rename transitions to edges or something?
		move templates to jinja or the sort?
