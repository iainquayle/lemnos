changes:
	guarenteed:
		refactor and clean up schema
			make the init not allow for defaults?
		fix the issue with the groups
			also just refactor it
		change name of range and move to transforms
		turn join existing into enum
			three: join on, make new, auto
		remove repetition bounds
			making them work correctly would be a pain, just rely on make node count and breeding
		remove some tests to make it easier to refactor
	possible:
		remove validate transform shape
		make transforms return none if the output doesnt fit perfectly, ie 5 -> 2
		move more module generation into the model nodes
			in case of the group, and using padding to solve it partially, the nodes will need to be able to deal with the padding?
			in the normal course it would be its responsibility for evaluation
problems:
	issue with groups, the input shape needs to be divisible by the group size
		non issue for 1 group, and for depthwise, but everything else is an issue
		only real option would be to make transforms have a requested output factor
		other would be to allow for the node to search for a size that fits, perhaps within a range
		orr, make it such that nodes can pad their inputs to fit the group size, jank but would technically work
			look at F.pad if using this
	no hint as to why a schema is not solvable
	if a join existing is set where there is none to join on, it will crash with no reason
