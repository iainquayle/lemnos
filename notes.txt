changes:
	guarenteed:
		fix the issue with the groups
			also just refactor it
		implement auto join
		refactor build process
			make model node an incremental process
				source conformance shape from it
				need to decide how to get the conformance shape from the children  
					could take in the possible children, it attempts to join them and set its output shape, return true if it does
					could be done by the transition group, then passed into the model node
				add join function, perhaps return conformance shape from there
				add has parent
			remove future node
	possible:
		remove validate transform shape
		make transforms return none if the output doesnt fit perfectly, ie 5 -> 2
		move more module generation into the model nodes
			in case of the group, and using padding to solve it partially, the nodes will need to be able to deal with the padding?
			in the normal course it would be its responsibility for evaluation
problems:
	when importing from inits, the wrong order will make circular
		make master init to mitigate this
	issue with groups, the input shape needs to be divisible by the group size
		!! node already do a singular lookahead when it comes to finding a valid output shape for joining existing nodes
			so just make a singular lookahead for closest valid shapes, and then choose the one that is closest to the desired shape
			shouldnt be too hard to implement, as it would deal with all of the schema nodes in a transition that it owns
		if all else fails, or as a fall back, could technically implement padding
	no hint as to why a schema is not solvable, perhaps return deepest location reached
	if a join existing is set where there is none to join on, it will crash with no reason, give proper error
