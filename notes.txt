changes:
	guarenteed:
		fix the issue with the groups
			create look ahead, that can define the modulo that a shape must conform to?
				already have look ahead for joining existing nodes nodes, so not unheard of
			also just refactor it
		reasses the need to return a list of strings from the component funtions, may be best to restrict it to one?
			but in the case of possibly expanding to making a monolithic triton kernel, it may work
			also may not though??
			idfk
	possible:
		remove validate transform shape
		make transforms return none if the output doesnt fit perfectly, ie 5 -> 2
		move ir to the target module
			keep the generation in the schema module
problems:
	issue with groups, the input shape needs to be divisible by the group size
		!! node already do a singular lookahead when it comes to finding a valid output shape for joining existing nodes
			so just make a singular lookahead for closest valid shapes, and then choose the one that is closest to the desired shape
			shouldnt be too hard to implement, as it would deal with all of the schema nodes in a transition that it owns
		if all else fails, or as a fall back, could technically implement padding

ideas:
	source gen options:
		hard code per component, set it to only work for torch
		switch on compoenet actual type, and access data from it
			allows for multiple source gen options, but is a little messy and doesnt align well with other languages
		pass in object which holds functions that are specific to each component type, these funcs are called and have the component passed into them
			little more verbose, but more in line with other languages perhaps, and guarantees type safety
		perhaps some other way, pass in ir 

			

		
