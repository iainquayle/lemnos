import torch
class M3(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 13, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(13)
		self.c0001_1 = torch.nn.BatchNorm1d(13)
		self.c0002_1 = torch.nn.Conv1d(13, 20, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(20)
		self.c0003_1 = torch.nn.BatchNorm1d(20)
		self.c0004_1 = torch.nn.Conv1d(20, 19, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(19)
		self.c0005_1 = torch.nn.Conv1d(19, 35, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(35)
		self.c0006_1 = torch.nn.BatchNorm1d(35)
		self.c0007_1 = torch.nn.Conv1d(35, 32, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(32)
		self.c0008_1 = torch.nn.BatchNorm1d(32)
		self.c0009_1 = torch.nn.Conv1d(32, 100, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(100)
		self.c000a_1 = torch.nn.Conv1d(100, 100, (5,), (1,), (2,), (1,), 100, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(100)
		self.c000b_1 = torch.nn.Conv1d(100, 32, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.BatchNorm1d(32)
		self.c000c_1 = torch.nn.BatchNorm1d(32)
		self.c000d_1 = torch.nn.Conv1d(32, 51, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(51)
		self.c000e_1 = torch.nn.Conv1d(51, 96, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(96)
		self.c000f_1 = torch.nn.BatchNorm1d(96)
		self.c0010_1 = torch.nn.Conv1d(96, 256, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(256)
		self.c0011_1 = torch.nn.Conv1d(256, 256, (5,), (1,), (2,), (1,), 256, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(256)
		self.c0012_1 = torch.nn.Conv1d(256, 96, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(96)
		self.c0013_1 = torch.nn.BatchNorm1d(96)
		self.c0014_1 = torch.nn.Conv1d(96, 169, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(169)
		self.c0015_1 = torch.nn.Conv1d(169, 169, (5,), (1,), (2,), (1,), 169, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(169)
		self.c0016_1 = torch.nn.Conv1d(169, 96, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.BatchNorm1d(96)
		self.c0017_1 = torch.nn.BatchNorm1d(96)
		self.c0018_1 = torch.nn.Conv1d(96, 256, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(256)
		self.c0019_1 = torch.nn.Conv1d(256, 256, (5,), (1,), (2,), (1,), 256, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(256)
		self.c001a_1 = torch.nn.Conv1d(256, 96, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.BatchNorm1d(96)
		self.c001b_1 = torch.nn.BatchNorm1d(96)
		self.c001c_1 = torch.nn.Conv1d(96, 178, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(178)
		self.c001d_1 = torch.nn.Conv1d(178, 147, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.ReLU6()
		self.c001d_3 = torch.nn.BatchNorm1d(147)
		self.c001e_1 = torch.nn.Linear(147, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3328)
		r0001 = self.c0001_1(r0001.view(-1, 13, 256)).view(-1, 3328)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 13, 256)))).view(-1, 2560)
		r0001 = self.c0003_1(r0001.view(-1, 20, 128)).view(-1, 2560)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 20, 128)))).view(-1, 1216)
		r0001 = self.c0005_3(self.c0005_2(self.c0005_1(r0001.view(-1, 19, 64)))).view(-1, 1120)
		r0001 = self.c0006_1(r0001.view(-1, 35, 32)).view(-1, 1120)
		r0001 = self.c0007_3(self.c0007_2(self.c0007_1(r0001.view(-1, 35, 32)))).view(-1, 512)
		r0001 = self.c0008_1(r0001.view(-1, 32, 16)).view(-1, 512)
		r0002 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 32, 16)))).view(-1, 1600)
		r0002 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 100, 16)))).view(-1, 1600)
		r0002 = self.c000b_2(self.c000b_1(r0002.view(-1, 100, 16))).view(-1, 512)
		r0002 = self.c000c_1((r0001 + r0002).view(-1, 32, 16)).view(-1, 512)
		r0002 = self.c000d_3(self.c000d_2(self.c000d_1(r0002.view(-1, 32, 16)))).view(-1, 408)
		r0002 = self.c000e_3(self.c000e_2(self.c000e_1(r0002.view(-1, 51, 8)))).view(-1, 384)
		r0002 = self.c000f_1(r0002.view(-1, 96, 4)).view(-1, 384)
		r0001 = self.c0010_3(self.c0010_2(self.c0010_1(r0002.view(-1, 96, 4)))).view(-1, 1024)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 256, 4)))).view(-1, 1024)
		r0001 = self.c0012_2(self.c0012_1(r0001.view(-1, 256, 4))).view(-1, 384)
		r0001 = self.c0013_1((r0002 + r0001).view(-1, 96, 4)).view(-1, 384)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0001.view(-1, 96, 4)))).view(-1, 676)
		r0002 = self.c0015_3(self.c0015_2(self.c0015_1(r0002.view(-1, 169, 4)))).view(-1, 676)
		r0002 = self.c0016_2(self.c0016_1(r0002.view(-1, 169, 4))).view(-1, 384)
		r0002 = self.c0017_1((r0001 + r0002).view(-1, 96, 4)).view(-1, 384)
		r0001 = self.c0018_3(self.c0018_2(self.c0018_1(r0002.view(-1, 96, 4)))).view(-1, 1024)
		r0001 = self.c0019_3(self.c0019_2(self.c0019_1(r0001.view(-1, 256, 4)))).view(-1, 1024)
		r0001 = self.c001a_2(self.c001a_1(r0001.view(-1, 256, 4))).view(-1, 384)
		r0001 = self.c001b_1((r0002 + r0001).view(-1, 96, 4)).view(-1, 384)
		r0001 = self.c001c_3(self.c001c_2(self.c001c_1(r0001.view(-1, 96, 4)))).view(-1, 356)
		r0001 = self.c001d_3(self.c001d_2(self.c001d_1(r0001.view(-1, 178, 2)))).view(-1, 147)
		r0001 = self.c001e_1(r0001)
		return r0001