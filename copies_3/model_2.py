import torch
class M2(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(16)
		self.c0003_1 = torch.nn.Conv1d(16, 18, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0003_2 = torch.nn.ReLU6()
		self.c0003_3 = torch.nn.BatchNorm1d(18)
		self.c0004_1 = torch.nn.BatchNorm1d(18)
		self.c0005_1 = torch.nn.Conv1d(18, 25, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(25)
		self.c0006_1 = torch.nn.Conv1d(25, 18, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(18)
		self.c0007_1 = torch.nn.Conv1d(18, 34, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(34)
		self.c0008_1 = torch.nn.BatchNorm1d(34)
		self.c0009_1 = torch.nn.Conv1d(34, 121, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(121)
		self.c000a_1 = torch.nn.Conv1d(121, 121, (5,), (1,), (2,), (1,), 121, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(121)
		self.c000b_1 = torch.nn.Conv1d(121, 34, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.BatchNorm1d(34)
		self.c000c_1 = torch.nn.BatchNorm1d(34)
		self.c000d_1 = torch.nn.Conv1d(34, 90, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(90)
		self.c000e_1 = torch.nn.Conv1d(90, 90, (5,), (1,), (2,), (1,), 90, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(90)
		self.c000f_1 = torch.nn.Conv1d(90, 34, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.BatchNorm1d(34)
		self.c0010_1 = torch.nn.BatchNorm1d(34)
		self.c0011_1 = torch.nn.Conv1d(34, 81, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(81)
		self.c0012_1 = torch.nn.Conv1d(81, 81, (5,), (1,), (2,), (1,), 81, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(81)
		self.c0013_1 = torch.nn.Conv1d(81, 34, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.BatchNorm1d(34)
		self.c0014_1 = torch.nn.BatchNorm1d(34)
		self.c0015_1 = torch.nn.Conv1d(34, 48, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(48)
		self.c0016_1 = torch.nn.Conv1d(48, 48, (5,), (1,), (2,), (1,), 48, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(48)
		self.c0017_1 = torch.nn.Conv1d(48, 34, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.BatchNorm1d(34)
		self.c0018_1 = torch.nn.BatchNorm1d(34)
		self.c0019_1 = torch.nn.Conv1d(34, 63, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(63)
		self.c001a_1 = torch.nn.BatchNorm1d(63)
		self.c001b_1 = torch.nn.Conv1d(63, 225, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(225)
		self.c001c_1 = torch.nn.Conv1d(225, 225, (5,), (1,), (2,), (1,), 225, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(225)
		self.c001d_1 = torch.nn.Conv1d(225, 63, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.BatchNorm1d(63)
		self.c001e_1 = torch.nn.BatchNorm1d(63)
		self.c001f_1 = torch.nn.Conv1d(63, 119, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(119)
		self.c0020_1 = torch.nn.BatchNorm1d(119)
		self.c0021_1 = torch.nn.Conv1d(119, 167, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(167)
		self.c0022_1 = torch.nn.BatchNorm1d(167)
		self.c0023_1 = torch.nn.Linear(167, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2048)
		r0001 = self.c0003_3(self.c0003_2(self.c0003_1(r0001.view(-1, 16, 128)))).view(-1, 1152)
		r0001 = self.c0004_1(r0001.view(-1, 18, 64)).view(-1, 1152)
		r0001 = self.c0005_3(self.c0005_2(self.c0005_1(r0001.view(-1, 18, 64)))).view(-1, 800)
		r0001 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 25, 32)))).view(-1, 288)
		r0001 = self.c0007_3(self.c0007_2(self.c0007_1(r0001.view(-1, 18, 16)))).view(-1, 272)
		r0001 = self.c0008_1(r0001.view(-1, 34, 8)).view(-1, 272)
		r0002 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 34, 8)))).view(-1, 968)
		r0002 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 121, 8)))).view(-1, 968)
		r0002 = self.c000b_2(self.c000b_1(r0002.view(-1, 121, 8))).view(-1, 272)
		r0002 = self.c000c_1((r0001 + r0002).view(-1, 34, 8)).view(-1, 272)
		r0001 = self.c000d_3(self.c000d_2(self.c000d_1(r0002.view(-1, 34, 8)))).view(-1, 720)
		r0001 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 90, 8)))).view(-1, 720)
		r0001 = self.c000f_2(self.c000f_1(r0001.view(-1, 90, 8))).view(-1, 272)
		r0001 = self.c0010_1((r0002 + r0001).view(-1, 34, 8)).view(-1, 272)
		r0002 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 34, 8)))).view(-1, 648)
		r0002 = self.c0012_3(self.c0012_2(self.c0012_1(r0002.view(-1, 81, 8)))).view(-1, 648)
		r0002 = self.c0013_2(self.c0013_1(r0002.view(-1, 81, 8))).view(-1, 272)
		r0002 = self.c0014_1((r0001 + r0002).view(-1, 34, 8)).view(-1, 272)
		r0001 = self.c0015_3(self.c0015_2(self.c0015_1(r0002.view(-1, 34, 8)))).view(-1, 384)
		r0001 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 48, 8)))).view(-1, 384)
		r0001 = self.c0017_2(self.c0017_1(r0001.view(-1, 48, 8))).view(-1, 272)
		r0001 = self.c0018_1((r0002 + r0001).view(-1, 34, 8)).view(-1, 272)
		r0001 = self.c0019_3(self.c0019_2(self.c0019_1(r0001.view(-1, 34, 8)))).view(-1, 252)
		r0001 = self.c001a_1(r0001.view(-1, 63, 4)).view(-1, 252)
		r0002 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 63, 4)))).view(-1, 900)
		r0002 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 225, 4)))).view(-1, 900)
		r0002 = self.c001d_2(self.c001d_1(r0002.view(-1, 225, 4))).view(-1, 252)
		r0002 = self.c001e_1((r0001 + r0002).view(-1, 63, 4)).view(-1, 252)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 63, 4)))).view(-1, 238)
		r0002 = self.c0020_1(r0002.view(-1, 119, 2)).view(-1, 238)
		r0002 = self.c0021_3(self.c0021_2(self.c0021_1(r0002.view(-1, 119, 2)))).view(-1, 167)
		r0002 = self.c0022_1(r0002.view(-1, 167, 1)).view(-1, 167)
		r0002 = self.c0023_1(r0002)
		return r0002