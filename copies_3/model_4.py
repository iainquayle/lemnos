import torch
class M4(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(16)
		self.c0003_1 = torch.nn.BatchNorm1d(16)
		self.c0004_1 = torch.nn.Conv1d(16, 23, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(23)
		self.c0005_1 = torch.nn.BatchNorm1d(23)
		self.c0006_1 = torch.nn.Conv1d(23, 18, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(18)
		self.c0007_1 = torch.nn.Conv1d(18, 21, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(21)
		self.c0008_1 = torch.nn.BatchNorm1d(21)
		self.c0009_1 = torch.nn.Conv1d(21, 30, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(30)
		self.c000a_1 = torch.nn.BatchNorm1d(30)
		self.c000b_1 = torch.nn.Conv1d(30, 54, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(54)
		self.c000c_1 = torch.nn.BatchNorm1d(54)
		self.c000d_1 = torch.nn.Conv1d(54, 192, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(192)
		self.c000e_1 = torch.nn.Conv1d(192, 192, (5,), (1,), (2,), (1,), 192, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(192)
		self.c000f_1 = torch.nn.Conv1d(192, 54, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.BatchNorm1d(54)
		self.c0010_1 = torch.nn.BatchNorm1d(54)
		self.c0011_1 = torch.nn.Conv1d(54, 66, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(66)
		self.c0012_1 = torch.nn.Conv1d(66, 66, (5,), (1,), (2,), (1,), 66, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(66)
		self.c0013_1 = torch.nn.Conv1d(66, 54, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.BatchNorm1d(54)
		self.c0014_1 = torch.nn.BatchNorm1d(54)
		self.c0015_1 = torch.nn.Conv1d(54, 57, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(57)
		self.c0016_1 = torch.nn.BatchNorm1d(57)
		self.c0017_1 = torch.nn.Conv1d(57, 61, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(61)
		self.c0018_1 = torch.nn.Conv1d(61, 61, (5,), (1,), (2,), (1,), 61, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(61)
		self.c0019_1 = torch.nn.Conv1d(61, 57, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.BatchNorm1d(57)
		self.c001a_1 = torch.nn.BatchNorm1d(57)
		self.c001b_1 = torch.nn.Conv1d(57, 93, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(93)
		self.c001c_1 = torch.nn.Linear(93, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2048)
		r0001 = self.c0003_1(r0001.view(-1, 16, 128)).view(-1, 2048)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 16, 128)))).view(-1, 1472)
		r0001 = self.c0005_1(r0001.view(-1, 23, 64)).view(-1, 1472)
		r0001 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 23, 64)))).view(-1, 576)
		r0001 = self.c0007_3(self.c0007_2(self.c0007_1(r0001.view(-1, 18, 32)))).view(-1, 336)
		r0001 = self.c0008_1(r0001.view(-1, 21, 16)).view(-1, 336)
		r0001 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 21, 16)))).view(-1, 240)
		r0001 = self.c000a_1(r0001.view(-1, 30, 8)).view(-1, 240)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0001.view(-1, 30, 8)))).view(-1, 216)
		r0001 = self.c000c_1(r0001.view(-1, 54, 4)).view(-1, 216)
		r0002 = self.c000d_3(self.c000d_2(self.c000d_1(r0001.view(-1, 54, 4)))).view(-1, 768)
		r0002 = self.c000e_3(self.c000e_2(self.c000e_1(r0002.view(-1, 192, 4)))).view(-1, 768)
		r0002 = self.c000f_2(self.c000f_1(r0002.view(-1, 192, 4))).view(-1, 216)
		r0002 = self.c0010_1((r0001 + r0002).view(-1, 54, 4)).view(-1, 216)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0002.view(-1, 54, 4)))).view(-1, 264)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0001.view(-1, 66, 4)))).view(-1, 264)
		r0001 = self.c0013_2(self.c0013_1(r0001.view(-1, 66, 4))).view(-1, 216)
		r0001 = self.c0014_1((r0002 + r0001).view(-1, 54, 4)).view(-1, 216)
		r0001 = self.c0015_3(self.c0015_2(self.c0015_1(r0001.view(-1, 54, 4)))).view(-1, 114)
		r0001 = self.c0016_1(r0001.view(-1, 57, 2)).view(-1, 114)
		r0002 = self.c0017_3(self.c0017_2(self.c0017_1(r0001.view(-1, 57, 2)))).view(-1, 122)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0002.view(-1, 61, 2)))).view(-1, 122)
		r0002 = self.c0019_2(self.c0019_1(r0002.view(-1, 61, 2))).view(-1, 114)
		r0002 = self.c001a_1((r0001 + r0002).view(-1, 57, 2)).view(-1, 114)
		r0002 = self.c001b_3(self.c001b_2(self.c001b_1(r0002.view(-1, 57, 2)))).view(-1, 93)
		r0002 = self.c001c_1(r0002)
		return r0002