import torch
class M1(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 29, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(29)
		self.c0003_1 = torch.nn.BatchNorm1d(29)
		self.c0004_1 = torch.nn.Conv1d(29, 22, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(22)
		self.c0005_1 = torch.nn.Conv1d(22, 21, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(21)
		self.c0006_1 = torch.nn.Conv1d(21, 42, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(42)
		self.c0007_1 = torch.nn.BatchNorm1d(42)
		self.c0008_1 = torch.nn.Conv1d(42, 134, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(134)
		self.c0009_1 = torch.nn.Conv1d(134, 134, (5,), (1,), (2,), (1,), 134, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(134)
		self.c000a_1 = torch.nn.Conv1d(134, 42, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.BatchNorm1d(42)
		self.c000b_1 = torch.nn.BatchNorm1d(42)
		self.c000c_1 = torch.nn.Conv1d(42, 42, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(42)
		self.c000d_1 = torch.nn.Conv1d(42, 42, (5,), (1,), (2,), (1,), 42, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(42)
		self.c000e_1 = torch.nn.Conv1d(42, 42, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.BatchNorm1d(42)
		self.c000f_1 = torch.nn.BatchNorm1d(42)
		self.c0010_1 = torch.nn.Conv1d(42, 152, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(152)
		self.c0011_1 = torch.nn.Conv1d(152, 152, (5,), (1,), (2,), (1,), 152, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(152)
		self.c0012_1 = torch.nn.Conv1d(152, 42, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(42)
		self.c0013_1 = torch.nn.BatchNorm1d(42)
		self.c0014_1 = torch.nn.Conv1d(42, 45, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(45)
		self.c0015_1 = torch.nn.Conv1d(45, 73, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(73)
		self.c0016_1 = torch.nn.BatchNorm1d(73)
		self.c0017_1 = torch.nn.Conv1d(73, 256, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(256)
		self.c0018_1 = torch.nn.Conv1d(256, 256, (5,), (1,), (2,), (1,), 256, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(256)
		self.c0019_1 = torch.nn.Conv1d(256, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.BatchNorm1d(73)
		self.c001a_1 = torch.nn.BatchNorm1d(73)
		self.c001b_1 = torch.nn.Conv1d(73, 116, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(116)
		self.c001c_1 = torch.nn.Conv1d(116, 116, (5,), (1,), (2,), (1,), 116, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(116)
		self.c001d_1 = torch.nn.Conv1d(116, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.BatchNorm1d(73)
		self.c001e_1 = torch.nn.BatchNorm1d(73)
		self.c001f_1 = torch.nn.Conv1d(73, 150, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(150)
		self.c0020_1 = torch.nn.Conv1d(150, 150, (5,), (1,), (2,), (1,), 150, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(150)
		self.c0021_1 = torch.nn.Conv1d(150, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.BatchNorm1d(73)
		self.c0022_1 = torch.nn.BatchNorm1d(73)
		self.c0023_1 = torch.nn.Conv1d(73, 112, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(112)
		self.c0024_1 = torch.nn.Conv1d(112, 112, (5,), (1,), (2,), (1,), 112, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(112)
		self.c0025_1 = torch.nn.Conv1d(112, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.BatchNorm1d(73)
		self.c0026_1 = torch.nn.BatchNorm1d(73)
		self.c0027_1 = torch.nn.Conv1d(73, 123, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(123)
		self.c0028_1 = torch.nn.Conv1d(123, 123, (5,), (1,), (2,), (1,), 123, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(123)
		self.c0029_1 = torch.nn.Conv1d(123, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.BatchNorm1d(73)
		self.c002a_1 = torch.nn.BatchNorm1d(73)
		self.c002b_1 = torch.nn.Conv1d(73, 256, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(256)
		self.c002c_1 = torch.nn.Conv1d(256, 256, (5,), (1,), (2,), (1,), 256, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(256)
		self.c002d_1 = torch.nn.Conv1d(256, 73, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.BatchNorm1d(73)
		self.c002e_1 = torch.nn.BatchNorm1d(73)
		self.c002f_1 = torch.nn.Conv1d(73, 112, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(112)
		self.c0030_1 = torch.nn.Conv1d(112, 140, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(140)
		self.c0031_1 = torch.nn.BatchNorm1d(140)
		self.c0032_1 = torch.nn.Linear(140, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 3712)
		r0001 = self.c0003_1(r0001.view(-1, 29, 128)).view(-1, 3712)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 29, 128)))).view(-1, 1408)
		r0001 = self.c0005_3(self.c0005_2(self.c0005_1(r0001.view(-1, 22, 64)))).view(-1, 672)
		r0001 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 21, 32)))).view(-1, 672)
		r0001 = self.c0007_1(r0001.view(-1, 42, 16)).view(-1, 672)
		r0002 = self.c0008_3(self.c0008_2(self.c0008_1(r0001.view(-1, 42, 16)))).view(-1, 2144)
		r0002 = self.c0009_3(self.c0009_2(self.c0009_1(r0002.view(-1, 134, 16)))).view(-1, 2144)
		r0002 = self.c000a_2(self.c000a_1(r0002.view(-1, 134, 16))).view(-1, 672)
		r0002 = self.c000b_1((r0001 + r0002).view(-1, 42, 16)).view(-1, 672)
		r0001 = self.c000c_3(self.c000c_2(self.c000c_1(r0002.view(-1, 42, 16)))).view(-1, 672)
		r0001 = self.c000d_3(self.c000d_2(self.c000d_1(r0001.view(-1, 42, 16)))).view(-1, 672)
		r0001 = self.c000e_2(self.c000e_1(r0001.view(-1, 42, 16))).view(-1, 672)
		r0001 = self.c000f_1((r0002 + r0001).view(-1, 42, 16)).view(-1, 672)
		r0002 = self.c0010_3(self.c0010_2(self.c0010_1(r0001.view(-1, 42, 16)))).view(-1, 2432)
		r0002 = self.c0011_3(self.c0011_2(self.c0011_1(r0002.view(-1, 152, 16)))).view(-1, 2432)
		r0002 = self.c0012_2(self.c0012_1(r0002.view(-1, 152, 16))).view(-1, 672)
		r0002 = self.c0013_1((r0001 + r0002).view(-1, 42, 16)).view(-1, 672)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0002.view(-1, 42, 16)))).view(-1, 360)
		r0002 = self.c0015_3(self.c0015_2(self.c0015_1(r0002.view(-1, 45, 8)))).view(-1, 292)
		r0002 = self.c0016_1(r0002.view(-1, 73, 4)).view(-1, 292)
		r0001 = self.c0017_3(self.c0017_2(self.c0017_1(r0002.view(-1, 73, 4)))).view(-1, 1024)
		r0001 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 256, 4)))).view(-1, 1024)
		r0001 = self.c0019_2(self.c0019_1(r0001.view(-1, 256, 4))).view(-1, 292)
		r0001 = self.c001a_1((r0002 + r0001).view(-1, 73, 4)).view(-1, 292)
		r0002 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 73, 4)))).view(-1, 464)
		r0002 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 116, 4)))).view(-1, 464)
		r0002 = self.c001d_2(self.c001d_1(r0002.view(-1, 116, 4))).view(-1, 292)
		r0002 = self.c001e_1((r0001 + r0002).view(-1, 73, 4)).view(-1, 292)
		r0001 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 73, 4)))).view(-1, 600)
		r0001 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 150, 4)))).view(-1, 600)
		r0001 = self.c0021_2(self.c0021_1(r0001.view(-1, 150, 4))).view(-1, 292)
		r0001 = self.c0022_1((r0002 + r0001).view(-1, 73, 4)).view(-1, 292)
		r0002 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 73, 4)))).view(-1, 448)
		r0002 = self.c0024_3(self.c0024_2(self.c0024_1(r0002.view(-1, 112, 4)))).view(-1, 448)
		r0002 = self.c0025_2(self.c0025_1(r0002.view(-1, 112, 4))).view(-1, 292)
		r0002 = self.c0026_1((r0001 + r0002).view(-1, 73, 4)).view(-1, 292)
		r0001 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 73, 4)))).view(-1, 492)
		r0001 = self.c0028_3(self.c0028_2(self.c0028_1(r0001.view(-1, 123, 4)))).view(-1, 492)
		r0001 = self.c0029_2(self.c0029_1(r0001.view(-1, 123, 4))).view(-1, 292)
		r0001 = self.c002a_1((r0002 + r0001).view(-1, 73, 4)).view(-1, 292)
		r0002 = self.c002b_3(self.c002b_2(self.c002b_1(r0001.view(-1, 73, 4)))).view(-1, 1024)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 256, 4)))).view(-1, 1024)
		r0002 = self.c002d_2(self.c002d_1(r0002.view(-1, 256, 4))).view(-1, 292)
		r0002 = self.c002e_1((r0001 + r0002).view(-1, 73, 4)).view(-1, 292)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 73, 4)))).view(-1, 224)
		r0002 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 112, 2)))).view(-1, 140)
		r0002 = self.c0031_1(r0002.view(-1, 140, 1)).view(-1, 140)
		r0002 = self.c0032_1(r0002)
		return r0002