import torch
class M0(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 50, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(50)
		self.c0003_1 = torch.nn.Conv1d(50, 140, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0003_2 = torch.nn.ReLU6()
		self.c0003_3 = torch.nn.BatchNorm1d(140)
		self.c0004_1 = torch.nn.BatchNorm1d(140)
		self.c0005_1 = torch.nn.Conv1d(140, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(172)
		self.c0006_1 = torch.nn.BatchNorm1d(172)
		self.c0007_1 = torch.nn.Conv1d(172, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(384)
		self.c0008_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(384)
		self.c0009_1 = torch.nn.Conv1d(384, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.BatchNorm1d(172)
		self.c000a_1 = torch.nn.BatchNorm1d(172)
		self.c000b_1 = torch.nn.Conv1d(172, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(384)
		self.c000c_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(384)
		self.c000d_1 = torch.nn.Conv1d(384, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.BatchNorm1d(172)
		self.c000e_1 = torch.nn.BatchNorm1d(172)
		self.c000f_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(172)
		self.c0010_1 = torch.nn.BatchNorm1d(172)
		self.c0011_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(172)
		self.c0012_1 = torch.nn.BatchNorm1d(172)
		self.c0013_1 = torch.nn.Conv1d(172, 284, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(284)
		self.c0014_1 = torch.nn.Conv1d(284, 284, (7,), (1,), (3,), (1,), 284, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(284)
		self.c0015_1 = torch.nn.Conv1d(284, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.BatchNorm1d(172)
		self.c0016_1 = torch.nn.BatchNorm1d(172)
		self.c0017_1 = torch.nn.Conv1d(172, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(384)
		self.c0018_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(384)
		self.c0019_1 = torch.nn.Conv1d(384, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.BatchNorm1d(172)
		self.c001a_1 = torch.nn.BatchNorm1d(172)
		self.c001b_1 = torch.nn.Conv1d(172, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(384)
		self.c001c_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(384)
		self.c001d_1 = torch.nn.Conv1d(384, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.BatchNorm1d(172)
		self.c001e_1 = torch.nn.BatchNorm1d(172)
		self.c001f_1 = torch.nn.Conv1d(172, 350, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(350)
		self.c0020_1 = torch.nn.Conv1d(350, 350, (7,), (1,), (3,), (1,), 350, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(350)
		self.c0021_1 = torch.nn.Conv1d(350, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.BatchNorm1d(172)
		self.c0022_1 = torch.nn.BatchNorm1d(172)
		self.c0023_1 = torch.nn.Conv1d(172, 321, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(321)
		self.c0024_1 = torch.nn.Conv1d(321, 321, (7,), (1,), (3,), (1,), 321, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(321)
		self.c0025_1 = torch.nn.Conv1d(321, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.BatchNorm1d(172)
		self.c0026_1 = torch.nn.BatchNorm1d(172)
		self.c0027_1 = torch.nn.Conv1d(172, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(384)
		self.c0028_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(384)
		self.c0029_1 = torch.nn.Conv1d(384, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.BatchNorm1d(172)
		self.c002a_1 = torch.nn.BatchNorm1d(172)
		self.c002b_1 = torch.nn.Conv1d(172, 195, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(195)
		self.c002c_1 = torch.nn.Conv1d(195, 195, (7,), (1,), (3,), (1,), 195, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(195)
		self.c002d_1 = torch.nn.Conv1d(195, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.BatchNorm1d(172)
		self.c002e_1 = torch.nn.BatchNorm1d(172)
		self.c002f_1 = torch.nn.Conv1d(172, 324, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(324)
		self.c0030_1 = torch.nn.Conv1d(324, 324, (7,), (1,), (3,), (1,), 324, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(324)
		self.c0031_1 = torch.nn.Conv1d(324, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.BatchNorm1d(172)
		self.c0032_1 = torch.nn.BatchNorm1d(172)
		self.c0033_1 = torch.nn.Conv1d(172, 329, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0033_2 = torch.nn.ReLU6()
		self.c0033_3 = torch.nn.BatchNorm1d(329)
		self.c0034_1 = torch.nn.Conv1d(329, 329, (7,), (1,), (3,), (1,), 329, bias=True, padding_mode='zeros')
		self.c0034_2 = torch.nn.ReLU6()
		self.c0034_3 = torch.nn.BatchNorm1d(329)
		self.c0035_1 = torch.nn.Conv1d(329, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0035_2 = torch.nn.BatchNorm1d(172)
		self.c0036_1 = torch.nn.BatchNorm1d(172)
		self.c0037_1 = torch.nn.Conv1d(172, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0037_2 = torch.nn.ReLU6()
		self.c0037_3 = torch.nn.BatchNorm1d(384)
		self.c0038_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c0038_2 = torch.nn.ReLU6()
		self.c0038_3 = torch.nn.BatchNorm1d(384)
		self.c0039_1 = torch.nn.Conv1d(384, 172, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0039_2 = torch.nn.BatchNorm1d(172)
		self.c003a_1 = torch.nn.BatchNorm1d(172)
		self.c003b_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003b_2 = torch.nn.ReLU6()
		self.c003b_3 = torch.nn.BatchNorm1d(172)
		self.c003c_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003c_2 = torch.nn.ReLU6()
		self.c003c_3 = torch.nn.BatchNorm1d(172)
		self.c003d_1 = torch.nn.Linear(172, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 917504)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 16384)))).view(-1, 245760)
		r0001 = self.c0001_1(r0001.view(-1, 15, 16384)).view(-1, 245760)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 16384)))).view(-1, 204800)
		r0001 = self.c0003_3(self.c0003_2(self.c0003_1(r0001.view(-1, 50, 4096)))).view(-1, 143360)
		r0001 = self.c0004_1(r0001.view(-1, 140, 1024)).view(-1, 143360)
		r0001 = self.c0005_3(self.c0005_2(self.c0005_1(r0001.view(-1, 140, 1024)))).view(-1, 44032)
		r0001 = self.c0006_1(r0001.view(-1, 172, 256)).view(-1, 44032)
		r0002 = self.c0007_3(self.c0007_2(self.c0007_1(r0001.view(-1, 172, 256)))).view(-1, 98304)
		r0002 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 384, 256)))).view(-1, 98304)
		r0002 = self.c0009_2(self.c0009_1(r0002.view(-1, 384, 256))).view(-1, 44032)
		r0002 = self.c000a_1((r0001 + r0002).view(-1, 172, 256)).view(-1, 44032)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0002.view(-1, 172, 256)))).view(-1, 98304)
		r0001 = self.c000c_3(self.c000c_2(self.c000c_1(r0001.view(-1, 384, 256)))).view(-1, 98304)
		r0001 = self.c000d_2(self.c000d_1(r0001.view(-1, 384, 256))).view(-1, 44032)
		r0001 = self.c000e_1((r0002 + r0001).view(-1, 172, 256)).view(-1, 44032)
		r0001 = self.c000f_3(self.c000f_2(self.c000f_1(r0001.view(-1, 172, 256)))).view(-1, 11008)
		r0001 = self.c0010_1(r0001.view(-1, 172, 64)).view(-1, 11008)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 172, 64)))).view(-1, 2752)
		r0001 = self.c0012_1(r0001.view(-1, 172, 16)).view(-1, 2752)
		r0002 = self.c0013_3(self.c0013_2(self.c0013_1(r0001.view(-1, 172, 16)))).view(-1, 4544)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0002.view(-1, 284, 16)))).view(-1, 4544)
		r0002 = self.c0015_2(self.c0015_1(r0002.view(-1, 284, 16))).view(-1, 2752)
		r0002 = self.c0016_1((r0001 + r0002).view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c0017_3(self.c0017_2(self.c0017_1(r0002.view(-1, 172, 16)))).view(-1, 6144)
		r0001 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 384, 16)))).view(-1, 6144)
		r0001 = self.c0019_2(self.c0019_1(r0001.view(-1, 384, 16))).view(-1, 2752)
		r0001 = self.c001a_1((r0002 + r0001).view(-1, 172, 16)).view(-1, 2752)
		r0002 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 172, 16)))).view(-1, 6144)
		r0002 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 384, 16)))).view(-1, 6144)
		r0002 = self.c001d_2(self.c001d_1(r0002.view(-1, 384, 16))).view(-1, 2752)
		r0002 = self.c001e_1((r0001 + r0002).view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 172, 16)))).view(-1, 5600)
		r0001 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 350, 16)))).view(-1, 5600)
		r0001 = self.c0021_2(self.c0021_1(r0001.view(-1, 350, 16))).view(-1, 2752)
		r0001 = self.c0022_1((r0002 + r0001).view(-1, 172, 16)).view(-1, 2752)
		r0002 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 172, 16)))).view(-1, 5136)
		r0002 = self.c0024_3(self.c0024_2(self.c0024_1(r0002.view(-1, 321, 16)))).view(-1, 5136)
		r0002 = self.c0025_2(self.c0025_1(r0002.view(-1, 321, 16))).view(-1, 2752)
		r0002 = self.c0026_1((r0001 + r0002).view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 172, 16)))).view(-1, 6144)
		r0001 = self.c0028_3(self.c0028_2(self.c0028_1(r0001.view(-1, 384, 16)))).view(-1, 6144)
		r0001 = self.c0029_2(self.c0029_1(r0001.view(-1, 384, 16))).view(-1, 2752)
		r0001 = self.c002a_1((r0002 + r0001).view(-1, 172, 16)).view(-1, 2752)
		r0002 = self.c002b_3(self.c002b_2(self.c002b_1(r0001.view(-1, 172, 16)))).view(-1, 3120)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 195, 16)))).view(-1, 3120)
		r0002 = self.c002d_2(self.c002d_1(r0002.view(-1, 195, 16))).view(-1, 2752)
		r0002 = self.c002e_1((r0001 + r0002).view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 172, 16)))).view(-1, 5184)
		r0001 = self.c0030_3(self.c0030_2(self.c0030_1(r0001.view(-1, 324, 16)))).view(-1, 5184)
		r0001 = self.c0031_2(self.c0031_1(r0001.view(-1, 324, 16))).view(-1, 2752)
		r0001 = self.c0032_1((r0002 + r0001).view(-1, 172, 16)).view(-1, 2752)
		r0002 = self.c0033_3(self.c0033_2(self.c0033_1(r0001.view(-1, 172, 16)))).view(-1, 5264)
		r0002 = self.c0034_3(self.c0034_2(self.c0034_1(r0002.view(-1, 329, 16)))).view(-1, 5264)
		r0002 = self.c0035_2(self.c0035_1(r0002.view(-1, 329, 16))).view(-1, 2752)
		r0002 = self.c0036_1((r0001 + r0002).view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c0037_3(self.c0037_2(self.c0037_1(r0002.view(-1, 172, 16)))).view(-1, 6144)
		r0001 = self.c0038_3(self.c0038_2(self.c0038_1(r0001.view(-1, 384, 16)))).view(-1, 6144)
		r0001 = self.c0039_2(self.c0039_1(r0001.view(-1, 384, 16))).view(-1, 2752)
		r0001 = self.c003a_1((r0002 + r0001).view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c003b_3(self.c003b_2(self.c003b_1(r0001.view(-1, 172, 16)))).view(-1, 688)
		r0001 = self.c003c_3(self.c003c_2(self.c003c_1(r0001.view(-1, 172, 4)))).view(-1, 172)
		r0001 = self.c003d_1(r0001)
		return r0001