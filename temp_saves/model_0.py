import torch
class M0(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 30, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(30)
		self.c0003_1 = torch.nn.BatchNorm1d(30)
		self.c0004_1 = torch.nn.Conv1d(30, 45, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(45)
		self.c0005_1 = torch.nn.BatchNorm1d(45)
		self.c0006_1 = torch.nn.Conv1d(45, 83, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(83)
		self.c0007_1 = torch.nn.Conv1d(83, 83, (5,), (1,), (2,), (1,), 83, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(83)
		self.c0008_1 = torch.nn.Conv1d(83, 45, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.BatchNorm1d(45)
		self.c0009_1 = torch.nn.BatchNorm1d(45)
		self.c000a_1 = torch.nn.Conv1d(45, 62, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(62)
		self.c000b_1 = torch.nn.Conv1d(62, 62, (5,), (1,), (2,), (1,), 62, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(62)
		self.c000c_1 = torch.nn.Conv1d(62, 45, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.BatchNorm1d(45)
		self.c000d_1 = torch.nn.BatchNorm1d(45)
		self.c000e_1 = torch.nn.Conv1d(45, 155, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(155)
		self.c000f_1 = torch.nn.Conv1d(155, 155, (5,), (1,), (2,), (1,), 155, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(155)
		self.c0010_1 = torch.nn.Conv1d(155, 45, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.BatchNorm1d(45)
		self.c0011_1 = torch.nn.BatchNorm1d(45)
		self.c0012_1 = torch.nn.Conv1d(45, 131, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(131)
		self.c0013_1 = torch.nn.Conv1d(131, 131, (5,), (1,), (2,), (1,), 131, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(131)
		self.c0014_1 = torch.nn.Conv1d(131, 45, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.BatchNorm1d(45)
		self.c0015_1 = torch.nn.BatchNorm1d(45)
		self.c0016_1 = torch.nn.Conv1d(45, 36, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(36)
		self.c0017_1 = torch.nn.Conv1d(36, 61, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(61)
		self.c0018_1 = torch.nn.Conv1d(61, 118, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(118)
		self.c0019_1 = torch.nn.BatchNorm1d(118)
		self.c001a_1 = torch.nn.Conv1d(118, 250, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(250)
		self.c001b_1 = torch.nn.Conv1d(250, 250, (5,), (1,), (2,), (1,), 250, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(250)
		self.c001c_1 = torch.nn.Conv1d(250, 118, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.BatchNorm1d(118)
		self.c001d_1 = torch.nn.BatchNorm1d(118)
		self.c001e_1 = torch.nn.Conv1d(118, 185, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(185)
		self.c001f_1 = torch.nn.Conv1d(185, 185, (5,), (1,), (2,), (1,), 185, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(185)
		self.c0020_1 = torch.nn.Conv1d(185, 118, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(118)
		self.c0021_1 = torch.nn.BatchNorm1d(118)
		self.c0022_1 = torch.nn.Conv1d(118, 218, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(218)
		self.c0023_1 = torch.nn.BatchNorm1d(218)
		self.c0024_1 = torch.nn.Conv1d(218, 202, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(202)
		self.c0025_1 = torch.nn.Conv1d(202, 93, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(93)
		self.c0026_1 = torch.nn.BatchNorm1d(93)
		self.c0027_1 = torch.nn.Conv1d(93, 256, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(256)
		self.c0028_1 = torch.nn.Conv1d(256, 256, (5,), (1,), (2,), (1,), 256, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(256)
		self.c0029_1 = torch.nn.Conv1d(256, 93, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.BatchNorm1d(93)
		self.c002a_1 = torch.nn.BatchNorm1d(93)
		self.c002b_1 = torch.nn.Conv1d(93, 210, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(210)
		self.c002c_1 = torch.nn.Conv1d(210, 210, (5,), (1,), (2,), (1,), 210, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(210)
		self.c002d_1 = torch.nn.Conv1d(210, 93, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.BatchNorm1d(93)
		self.c002e_1 = torch.nn.BatchNorm1d(93)
		self.c002f_1 = torch.nn.Conv1d(93, 203, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(203)
		self.c0030_1 = torch.nn.Conv1d(203, 203, (5,), (1,), (2,), (1,), 203, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(203)
		self.c0031_1 = torch.nn.Conv1d(203, 93, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.BatchNorm1d(93)
		self.c0032_1 = torch.nn.BatchNorm1d(93)
		self.c0033_1 = torch.nn.Linear(93, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 3840)
		r0001 = self.c0003_1(r0001.view(-1, 30, 128)).view(-1, 3840)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 30, 128)))).view(-1, 2880)
		r0001 = self.c0005_1(r0001.view(-1, 45, 64)).view(-1, 2880)
		r0002 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 45, 64)))).view(-1, 5312)
		r0002 = self.c0007_3(self.c0007_2(self.c0007_1(r0002.view(-1, 83, 64)))).view(-1, 5312)
		r0002 = self.c0008_2(self.c0008_1(r0002.view(-1, 83, 64))).view(-1, 2880)
		r0002 = self.c0009_1((r0001 + r0002).view(-1, 45, 64)).view(-1, 2880)
		r0001 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 45, 64)))).view(-1, 3968)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0001.view(-1, 62, 64)))).view(-1, 3968)
		r0001 = self.c000c_2(self.c000c_1(r0001.view(-1, 62, 64))).view(-1, 2880)
		r0001 = self.c000d_1((r0002 + r0001).view(-1, 45, 64)).view(-1, 2880)
		r0002 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 45, 64)))).view(-1, 9920)
		r0002 = self.c000f_3(self.c000f_2(self.c000f_1(r0002.view(-1, 155, 64)))).view(-1, 9920)
		r0002 = self.c0010_2(self.c0010_1(r0002.view(-1, 155, 64))).view(-1, 2880)
		r0002 = self.c0011_1((r0001 + r0002).view(-1, 45, 64)).view(-1, 2880)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0002.view(-1, 45, 64)))).view(-1, 8384)
		r0001 = self.c0013_3(self.c0013_2(self.c0013_1(r0001.view(-1, 131, 64)))).view(-1, 8384)
		r0001 = self.c0014_2(self.c0014_1(r0001.view(-1, 131, 64))).view(-1, 2880)
		r0001 = self.c0015_1((r0002 + r0001).view(-1, 45, 64)).view(-1, 2880)
		r0001 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 45, 64)))).view(-1, 1152)
		r0001 = self.c0017_3(self.c0017_2(self.c0017_1(r0001.view(-1, 36, 32)))).view(-1, 976)
		r0001 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 61, 16)))).view(-1, 944)
		r0001 = self.c0019_1(r0001.view(-1, 118, 8)).view(-1, 944)
		r0002 = self.c001a_3(self.c001a_2(self.c001a_1(r0001.view(-1, 118, 8)))).view(-1, 2000)
		r0002 = self.c001b_3(self.c001b_2(self.c001b_1(r0002.view(-1, 250, 8)))).view(-1, 2000)
		r0002 = self.c001c_2(self.c001c_1(r0002.view(-1, 250, 8))).view(-1, 944)
		r0002 = self.c001d_1((r0001 + r0002).view(-1, 118, 8)).view(-1, 944)
		r0001 = self.c001e_3(self.c001e_2(self.c001e_1(r0002.view(-1, 118, 8)))).view(-1, 1480)
		r0001 = self.c001f_3(self.c001f_2(self.c001f_1(r0001.view(-1, 185, 8)))).view(-1, 1480)
		r0001 = self.c0020_2(self.c0020_1(r0001.view(-1, 185, 8))).view(-1, 944)
		r0001 = self.c0021_1((r0002 + r0001).view(-1, 118, 8)).view(-1, 944)
		r0001 = self.c0022_3(self.c0022_2(self.c0022_1(r0001.view(-1, 118, 8)))).view(-1, 872)
		r0001 = self.c0023_1(r0001.view(-1, 218, 4)).view(-1, 872)
		r0001 = self.c0024_3(self.c0024_2(self.c0024_1(r0001.view(-1, 218, 4)))).view(-1, 404)
		r0001 = self.c0025_3(self.c0025_2(self.c0025_1(r0001.view(-1, 202, 2)))).view(-1, 93)
		r0001 = self.c0026_1(r0001.view(-1, 93, 1)).view(-1, 93)
		r0002 = self.c0027_3(self.c0027_2(self.c0027_1(r0001.view(-1, 93, 1)))).view(-1, 256)
		r0002 = self.c0028_3(self.c0028_2(self.c0028_1(r0002.view(-1, 256, 1)))).view(-1, 256)
		r0002 = self.c0029_2(self.c0029_1(r0002.view(-1, 256, 1))).view(-1, 93)
		r0002 = self.c002a_1((r0001 + r0002).view(-1, 93, 1)).view(-1, 93)
		r0001 = self.c002b_3(self.c002b_2(self.c002b_1(r0002.view(-1, 93, 1)))).view(-1, 210)
		r0001 = self.c002c_3(self.c002c_2(self.c002c_1(r0001.view(-1, 210, 1)))).view(-1, 210)
		r0001 = self.c002d_2(self.c002d_1(r0001.view(-1, 210, 1))).view(-1, 93)
		r0001 = self.c002e_1((r0002 + r0001).view(-1, 93, 1)).view(-1, 93)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0001.view(-1, 93, 1)))).view(-1, 203)
		r0002 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 203, 1)))).view(-1, 203)
		r0002 = self.c0031_2(self.c0031_1(r0002.view(-1, 203, 1))).view(-1, 93)
		r0002 = self.c0032_1((r0001 + r0002).view(-1, 93, 1)).view(-1, 93)
		r0002 = self.c0033_1(r0002)
		return r0002