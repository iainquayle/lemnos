import torch
class M3(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 17, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(17)
		self.c0003_1 = torch.nn.BatchNorm1d(17)
		self.c0004_1 = torch.nn.Conv1d(17, 18, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(18)
		self.c0005_1 = torch.nn.Conv1d(18, 18, (7,), (1,), (3,), (1,), 18, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(18)
		self.c0006_1 = torch.nn.Conv1d(18, 17, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.BatchNorm1d(17)
		self.c0007_1 = torch.nn.BatchNorm1d(17)
		self.c0008_1 = torch.nn.Conv1d(17, 34, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(34)
		self.c0009_1 = torch.nn.Conv1d(34, 34, (7,), (1,), (3,), (1,), 34, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(34)
		self.c000a_1 = torch.nn.Conv1d(34, 17, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.BatchNorm1d(17)
		self.c000b_1 = torch.nn.BatchNorm1d(17)
		self.c000c_1 = torch.nn.Conv1d(17, 59, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(59)
		self.c000d_1 = torch.nn.Conv1d(59, 59, (7,), (1,), (3,), (1,), 59, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(59)
		self.c000e_1 = torch.nn.Conv1d(59, 17, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.BatchNorm1d(17)
		self.c000f_1 = torch.nn.BatchNorm1d(17)
		self.c0010_1 = torch.nn.Conv1d(17, 67, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(67)
		self.c0011_1 = torch.nn.Conv1d(67, 67, (7,), (1,), (3,), (1,), 67, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(67)
		self.c0012_1 = torch.nn.Conv1d(67, 17, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(17)
		self.c0013_1 = torch.nn.BatchNorm1d(17)
		self.c0014_1 = torch.nn.Conv1d(17, 46, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(46)
		self.c0015_1 = torch.nn.Conv1d(46, 46, (7,), (1,), (3,), (1,), 46, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(46)
		self.c0016_1 = torch.nn.Conv1d(46, 17, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.BatchNorm1d(17)
		self.c0017_1 = torch.nn.BatchNorm1d(17)
		self.c0018_1 = torch.nn.Conv1d(17, 41, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(41)
		self.c0019_1 = torch.nn.BatchNorm1d(41)
		self.c001a_1 = torch.nn.Conv1d(41, 134, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(134)
		self.c001b_1 = torch.nn.Conv1d(134, 134, (7,), (1,), (3,), (1,), 134, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(134)
		self.c001c_1 = torch.nn.Conv1d(134, 41, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.BatchNorm1d(41)
		self.c001d_1 = torch.nn.BatchNorm1d(41)
		self.c001e_1 = torch.nn.Conv1d(41, 46, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(46)
		self.c001f_1 = torch.nn.BatchNorm1d(46)
		self.c0020_1 = torch.nn.Conv1d(46, 114, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(114)
		self.c0021_1 = torch.nn.Conv1d(114, 114, (7,), (1,), (3,), (1,), 114, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(114)
		self.c0022_1 = torch.nn.Conv1d(114, 46, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.BatchNorm1d(46)
		self.c0023_1 = torch.nn.BatchNorm1d(46)
		self.c0024_1 = torch.nn.Conv1d(46, 72, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(72)
		self.c0025_1 = torch.nn.Conv1d(72, 72, (7,), (1,), (3,), (1,), 72, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(72)
		self.c0026_1 = torch.nn.Conv1d(72, 46, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.BatchNorm1d(46)
		self.c0027_1 = torch.nn.BatchNorm1d(46)
		self.c0028_1 = torch.nn.Conv1d(46, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(172)
		self.c0029_1 = torch.nn.Conv1d(172, 150, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.ReLU6()
		self.c0029_3 = torch.nn.BatchNorm1d(150)
		self.c002a_1 = torch.nn.BatchNorm1d(150)
		self.c002b_1 = torch.nn.Conv1d(150, 384, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(384)
		self.c002c_1 = torch.nn.Conv1d(384, 384, (7,), (1,), (3,), (1,), 384, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(384)
		self.c002d_1 = torch.nn.Conv1d(384, 150, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.BatchNorm1d(150)
		self.c002e_1 = torch.nn.BatchNorm1d(150)
		self.c002f_1 = torch.nn.Conv1d(150, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(172)
		self.c0030_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(172)
		self.c0031_1 = torch.nn.Linear(172, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 917504)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 16384)))).view(-1, 245760)
		r0001 = self.c0001_1(r0001.view(-1, 15, 16384)).view(-1, 245760)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 16384)))).view(-1, 69632)
		r0001 = self.c0003_1(r0001.view(-1, 17, 4096)).view(-1, 69632)
		r0002 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 17, 4096)))).view(-1, 73728)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0002.view(-1, 18, 4096)))).view(-1, 73728)
		r0002 = self.c0006_2(self.c0006_1(r0002.view(-1, 18, 4096))).view(-1, 69632)
		r0002 = self.c0007_1((r0001 + r0002).view(-1, 17, 4096)).view(-1, 69632)
		r0001 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 17, 4096)))).view(-1, 139264)
		r0001 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 34, 4096)))).view(-1, 139264)
		r0001 = self.c000a_2(self.c000a_1(r0001.view(-1, 34, 4096))).view(-1, 69632)
		r0001 = self.c000b_1((r0002 + r0001).view(-1, 17, 4096)).view(-1, 69632)
		r0002 = self.c000c_3(self.c000c_2(self.c000c_1(r0001.view(-1, 17, 4096)))).view(-1, 241664)
		r0002 = self.c000d_3(self.c000d_2(self.c000d_1(r0002.view(-1, 59, 4096)))).view(-1, 241664)
		r0002 = self.c000e_2(self.c000e_1(r0002.view(-1, 59, 4096))).view(-1, 69632)
		r0002 = self.c000f_1((r0001 + r0002).view(-1, 17, 4096)).view(-1, 69632)
		r0001 = self.c0010_3(self.c0010_2(self.c0010_1(r0002.view(-1, 17, 4096)))).view(-1, 274432)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 67, 4096)))).view(-1, 274432)
		r0001 = self.c0012_2(self.c0012_1(r0001.view(-1, 67, 4096))).view(-1, 69632)
		r0001 = self.c0013_1((r0002 + r0001).view(-1, 17, 4096)).view(-1, 69632)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0001.view(-1, 17, 4096)))).view(-1, 188416)
		r0002 = self.c0015_3(self.c0015_2(self.c0015_1(r0002.view(-1, 46, 4096)))).view(-1, 188416)
		r0002 = self.c0016_2(self.c0016_1(r0002.view(-1, 46, 4096))).view(-1, 69632)
		r0002 = self.c0017_1((r0001 + r0002).view(-1, 17, 4096)).view(-1, 69632)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0002.view(-1, 17, 4096)))).view(-1, 41984)
		r0002 = self.c0019_1(r0002.view(-1, 41, 1024)).view(-1, 41984)
		r0001 = self.c001a_3(self.c001a_2(self.c001a_1(r0002.view(-1, 41, 1024)))).view(-1, 137216)
		r0001 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 134, 1024)))).view(-1, 137216)
		r0001 = self.c001c_2(self.c001c_1(r0001.view(-1, 134, 1024))).view(-1, 41984)
		r0001 = self.c001d_1((r0002 + r0001).view(-1, 41, 1024)).view(-1, 41984)
		r0001 = self.c001e_3(self.c001e_2(self.c001e_1(r0001.view(-1, 41, 1024)))).view(-1, 11776)
		r0001 = self.c001f_1(r0001.view(-1, 46, 256)).view(-1, 11776)
		r0002 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 46, 256)))).view(-1, 29184)
		r0002 = self.c0021_3(self.c0021_2(self.c0021_1(r0002.view(-1, 114, 256)))).view(-1, 29184)
		r0002 = self.c0022_2(self.c0022_1(r0002.view(-1, 114, 256))).view(-1, 11776)
		r0002 = self.c0023_1((r0001 + r0002).view(-1, 46, 256)).view(-1, 11776)
		r0001 = self.c0024_3(self.c0024_2(self.c0024_1(r0002.view(-1, 46, 256)))).view(-1, 18432)
		r0001 = self.c0025_3(self.c0025_2(self.c0025_1(r0001.view(-1, 72, 256)))).view(-1, 18432)
		r0001 = self.c0026_2(self.c0026_1(r0001.view(-1, 72, 256))).view(-1, 11776)
		r0001 = self.c0027_1((r0002 + r0001).view(-1, 46, 256)).view(-1, 11776)
		r0001 = self.c0028_3(self.c0028_2(self.c0028_1(r0001.view(-1, 46, 256)))).view(-1, 11008)
		r0001 = self.c0029_3(self.c0029_2(self.c0029_1(r0001.view(-1, 172, 64)))).view(-1, 2400)
		r0001 = self.c002a_1(r0001.view(-1, 150, 16)).view(-1, 2400)
		r0002 = self.c002b_3(self.c002b_2(self.c002b_1(r0001.view(-1, 150, 16)))).view(-1, 6144)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 384, 16)))).view(-1, 6144)
		r0002 = self.c002d_2(self.c002d_1(r0002.view(-1, 384, 16))).view(-1, 2400)
		r0002 = self.c002e_1((r0001 + r0002).view(-1, 150, 16)).view(-1, 2400)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 150, 16)))).view(-1, 688)
		r0002 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 172, 4)))).view(-1, 172)
		r0002 = self.c0031_1(r0002)
		return r0002