import torch
class M2(torch.nn.Module):
	import torch
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(16)
		self.c0001_1 = torch.nn.Conv1d(16, 48, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0001_2 = torch.nn.ReLU6()
		self.c0001_3 = torch.nn.BatchNorm1d(48)
		self.c0002_1 = torch.nn.Conv1d(48, 128, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.SiLU()
		self.c0002_3 = torch.nn.BatchNorm1d(128)
		self.c0003_1 = torch.nn.Conv1d(128, 168, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0003_2 = torch.nn.SiLU()
		self.c0003_3 = torch.nn.BatchNorm1d(168)
		self.c0004_1 = torch.nn.Conv1d(168, 224, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.SiLU()
		self.c0004_3 = torch.nn.BatchNorm1d(224)
		self.c0005_1 = torch.nn.Conv1d(224, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(128)
		self.c0006_1 = torch.nn.Conv1d(224, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(128)
		self.c0007_1 = torch.nn.Conv1d(224, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(128)
		self.c0008_1 = torch.nn.Conv1d(128, 128, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(128)
		self.c0009_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(128)
		self.c000a_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(128)
		self.c000b_1 = torch.nn.Conv1d(384, 224, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.BatchNorm1d(224)
		self.c000c_1 = torch.nn.BatchNorm1d(224)
		self.c000d_1 = torch.nn.Conv1d(224, 200, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.SiLU()
		self.c000d_3 = torch.nn.BatchNorm1d(200)
		self.c000e_1 = torch.nn.Conv1d(200, 192, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.SiLU()
		self.c000e_3 = torch.nn.BatchNorm1d(192)
		self.c000f_1 = torch.nn.Conv1d(192, 120, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(120)
		self.c0010_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(128)
		self.c0011_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(128)
		self.c0012_1 = torch.nn.Conv1d(120, 120, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(120)
		self.c0013_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(128)
		self.c0014_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(128)
		self.c0015_1 = torch.nn.Conv1d(376, 192, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.BatchNorm1d(192)
		self.c0016_1 = torch.nn.BatchNorm1d(192)
		self.c0017_1 = torch.nn.Conv1d(192, 112, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(112)
		self.c0018_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(128)
		self.c0019_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(128)
		self.c001a_1 = torch.nn.Conv1d(112, 112, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(112)
		self.c001b_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(128)
		self.c001c_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(128)
		self.c001d_1 = torch.nn.Conv1d(368, 192, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.BatchNorm1d(192)
		self.c001e_1 = torch.nn.BatchNorm1d(192)
		self.c001f_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(128)
		self.c0020_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(128)
		self.c0021_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(128)
		self.c0022_1 = torch.nn.Conv1d(128, 128, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(128)
		self.c0023_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(128)
		self.c0024_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(128)
		self.c0025_1 = torch.nn.Conv1d(384, 192, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.BatchNorm1d(192)
		self.c0026_1 = torch.nn.BatchNorm1d(192)
		self.c0027_1 = torch.nn.Conv1d(192, 120, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(120)
		self.c0028_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(128)
		self.c0029_1 = torch.nn.Conv1d(192, 120, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.ReLU6()
		self.c0029_3 = torch.nn.BatchNorm1d(120)
		self.c002a_1 = torch.nn.Conv1d(120, 120, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.ReLU6()
		self.c002a_3 = torch.nn.BatchNorm1d(120)
		self.c002b_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(128)
		self.c002c_1 = torch.nn.Conv1d(120, 120, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(120)
		self.c002d_1 = torch.nn.Conv1d(368, 192, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002d_2 = torch.nn.BatchNorm1d(192)
		self.c002e_1 = torch.nn.BatchNorm1d(192)
		self.c002f_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(128)
		self.c0030_1 = torch.nn.Conv1d(192, 112, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(112)
		self.c0031_1 = torch.nn.Conv1d(192, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.ReLU6()
		self.c0031_3 = torch.nn.BatchNorm1d(128)
		self.c0032_1 = torch.nn.Conv1d(128, 128, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.ReLU6()
		self.c0032_3 = torch.nn.BatchNorm1d(128)
		self.c0033_1 = torch.nn.Conv1d(112, 112, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c0033_2 = torch.nn.ReLU6()
		self.c0033_3 = torch.nn.BatchNorm1d(112)
		self.c0034_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c0034_2 = torch.nn.ReLU6()
		self.c0034_3 = torch.nn.BatchNorm1d(128)
		self.c0035_1 = torch.nn.Conv1d(368, 192, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0035_2 = torch.nn.BatchNorm1d(192)
		self.c0036_1 = torch.nn.BatchNorm1d(192)
		self.c0037_1 = torch.nn.Conv1d(192, 176, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0037_2 = torch.nn.SiLU()
		self.c0037_3 = torch.nn.BatchNorm1d(176)
		self.c0038_1 = torch.nn.Conv1d(176, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0038_2 = torch.nn.ReLU6()
		self.c0038_3 = torch.nn.BatchNorm1d(128)
		self.c0039_1 = torch.nn.Conv1d(176, 104, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0039_2 = torch.nn.ReLU6()
		self.c0039_3 = torch.nn.BatchNorm1d(104)
		self.c003a_1 = torch.nn.Conv1d(176, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003a_2 = torch.nn.ReLU6()
		self.c003a_3 = torch.nn.BatchNorm1d(128)
		self.c003b_1 = torch.nn.Conv1d(128, 128, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003b_2 = torch.nn.ReLU6()
		self.c003b_3 = torch.nn.BatchNorm1d(128)
		self.c003c_1 = torch.nn.Conv1d(104, 104, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c003c_2 = torch.nn.ReLU6()
		self.c003c_3 = torch.nn.BatchNorm1d(104)
		self.c003d_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c003d_2 = torch.nn.ReLU6()
		self.c003d_3 = torch.nn.BatchNorm1d(128)
		self.c003e_1 = torch.nn.Conv1d(360, 176, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003e_2 = torch.nn.BatchNorm1d(176)
		self.c003f_1 = torch.nn.BatchNorm1d(176)
		self.c0040_1 = torch.nn.Conv1d(176, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0040_2 = torch.nn.ReLU6()
		self.c0040_3 = torch.nn.BatchNorm1d(128)
		self.c0041_1 = torch.nn.Conv1d(176, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0041_2 = torch.nn.ReLU6()
		self.c0041_3 = torch.nn.BatchNorm1d(128)
		self.c0042_1 = torch.nn.Conv1d(176, 112, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0042_2 = torch.nn.ReLU6()
		self.c0042_3 = torch.nn.BatchNorm1d(112)
		self.c0043_1 = torch.nn.Conv1d(128, 128, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0043_2 = torch.nn.ReLU6()
		self.c0043_3 = torch.nn.BatchNorm1d(128)
		self.c0044_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c0044_2 = torch.nn.ReLU6()
		self.c0044_3 = torch.nn.BatchNorm1d(128)
		self.c0045_1 = torch.nn.Conv1d(112, 112, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c0045_2 = torch.nn.ReLU6()
		self.c0045_3 = torch.nn.BatchNorm1d(112)
		self.c0046_1 = torch.nn.Conv1d(368, 176, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0046_2 = torch.nn.BatchNorm1d(176)
		self.c0047_1 = torch.nn.BatchNorm1d(176)
		self.c0048_1 = torch.nn.Conv1d(176, 104, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0048_2 = torch.nn.ReLU6()
		self.c0048_3 = torch.nn.BatchNorm1d(104)
		self.c0049_1 = torch.nn.Conv1d(176, 120, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0049_2 = torch.nn.ReLU6()
		self.c0049_3 = torch.nn.BatchNorm1d(120)
		self.c004a_1 = torch.nn.Conv1d(176, 112, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c004a_2 = torch.nn.ReLU6()
		self.c004a_3 = torch.nn.BatchNorm1d(112)
		self.c004b_1 = torch.nn.Conv1d(104, 104, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c004b_2 = torch.nn.ReLU6()
		self.c004b_3 = torch.nn.BatchNorm1d(104)
		self.c004c_1 = torch.nn.Conv1d(120, 120, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c004c_2 = torch.nn.ReLU6()
		self.c004c_3 = torch.nn.BatchNorm1d(120)
		self.c004d_1 = torch.nn.Conv1d(112, 112, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c004d_2 = torch.nn.ReLU6()
		self.c004d_3 = torch.nn.BatchNorm1d(112)
		self.c004e_1 = torch.nn.Conv1d(336, 176, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c004e_2 = torch.nn.BatchNorm1d(176)
		self.c004f_1 = torch.nn.BatchNorm1d(176)
		self.c0050_1 = torch.nn.Conv1d(176, 96, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0050_2 = torch.nn.ReLU6()
		self.c0050_3 = torch.nn.BatchNorm1d(96)
		self.c0051_1 = torch.nn.Conv1d(176, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0051_2 = torch.nn.ReLU6()
		self.c0051_3 = torch.nn.BatchNorm1d(128)
		self.c0052_1 = torch.nn.Conv1d(176, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0052_2 = torch.nn.ReLU6()
		self.c0052_3 = torch.nn.BatchNorm1d(128)
		self.c0053_1 = torch.nn.Conv1d(96, 96, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0053_2 = torch.nn.ReLU6()
		self.c0053_3 = torch.nn.BatchNorm1d(96)
		self.c0054_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c0054_2 = torch.nn.ReLU6()
		self.c0054_3 = torch.nn.BatchNorm1d(128)
		self.c0055_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c0055_2 = torch.nn.ReLU6()
		self.c0055_3 = torch.nn.BatchNorm1d(128)
		self.c0056_1 = torch.nn.Conv1d(352, 176, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0056_2 = torch.nn.BatchNorm1d(176)
		self.c0057_1 = torch.nn.BatchNorm1d(176)
		self.c0058_1 = torch.nn.Conv1d(176, 248, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0058_2 = torch.nn.SiLU()
		self.c0058_3 = torch.nn.BatchNorm1d(248)
		self.c0059_1 = torch.nn.Conv1d(248, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0059_2 = torch.nn.ReLU6()
		self.c0059_3 = torch.nn.BatchNorm1d(128)
		self.c005a_1 = torch.nn.Conv1d(248, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c005a_2 = torch.nn.ReLU6()
		self.c005a_3 = torch.nn.BatchNorm1d(128)
		self.c005b_1 = torch.nn.Conv1d(248, 128, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c005b_2 = torch.nn.ReLU6()
		self.c005b_3 = torch.nn.BatchNorm1d(128)
		self.c005c_1 = torch.nn.Conv1d(128, 128, (3,), (1,), (1,), (1,), 1, bias=True, padding_mode='zeros')
		self.c005c_2 = torch.nn.ReLU6()
		self.c005c_3 = torch.nn.BatchNorm1d(128)
		self.c005d_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (2,), (4,), 1, bias=True, padding_mode='zeros')
		self.c005d_2 = torch.nn.ReLU6()
		self.c005d_3 = torch.nn.BatchNorm1d(128)
		self.c005e_1 = torch.nn.Conv1d(128, 128, (2,), (1,), (3,), (6,), 1, bias=True, padding_mode='zeros')
		self.c005e_2 = torch.nn.ReLU6()
		self.c005e_3 = torch.nn.BatchNorm1d(128)
		self.c005f_1 = torch.nn.Conv1d(384, 248, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c005f_2 = torch.nn.BatchNorm1d(248)
		self.c0060_1 = torch.nn.BatchNorm1d(248)
		self.c0061_1 = torch.nn.Conv1d(248, 200, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0061_2 = torch.nn.SiLU()
		self.c0061_3 = torch.nn.BatchNorm1d(200)
		self.c0062_1 = torch.nn.Linear(200, 1, bias=True)
	def forward(self, r0001):
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 4096)
		r0001 = self.c0001_3(self.c0001_2(self.c0001_1(r0001.view(-1, 16, 256)))).view(-1, 12288)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 48, 256)))).view(-1, 16384)
		r0001 = self.c0003_3(self.c0003_2(self.c0003_1(r0001.view(-1, 128, 128)))).view(-1, 10752)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 168, 64)))).view(-1, 7168)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0001.view(-1, 224, 32)))).view(-1, 4096)
		r0003 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 224, 32)))).view(-1, 4096)
		r0004 = self.c0007_3(self.c0007_2(self.c0007_1(r0001.view(-1, 224, 32)))).view(-1, 4096)
		r0002 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 128, 32)))).view(-1, 4096)
		r0003 = self.c0009_3(self.c0009_2(self.c0009_1(r0003.view(-1, 128, 32)))).view(-1, 4096)
		r0004 = self.c000a_3(self.c000a_2(self.c000a_1(r0004.view(-1, 128, 32)))).view(-1, 4096)
		r0004 = self.c000b_2(self.c000b_1(self.torch.cat((r0002, r0003, r0004), dim=1).view(-1, 384, 32))).view(-1, 7168)
		r0004 = self.c000c_1((r0001 + r0004).view(-1, 224, 32)).view(-1, 7168)
		r0004 = self.c000d_3(self.c000d_2(self.c000d_1(r0004.view(-1, 224, 32)))).view(-1, 3200)
		r0004 = self.c000e_3(self.c000e_2(self.c000e_1(r0004.view(-1, 200, 16)))).view(-1, 1536)
		r0001 = self.c000f_3(self.c000f_2(self.c000f_1(r0004.view(-1, 192, 8)))).view(-1, 960)
		r0003 = self.c0010_3(self.c0010_2(self.c0010_1(r0004.view(-1, 192, 8)))).view(-1, 1024)
		r0002 = self.c0011_3(self.c0011_2(self.c0011_1(r0004.view(-1, 192, 8)))).view(-1, 1024)
		r0001 = self.c0012_3(self.c0012_2(self.c0012_1(r0001.view(-1, 120, 8)))).view(-1, 960)
		r0003 = self.c0013_3(self.c0013_2(self.c0013_1(r0003.view(-1, 128, 8)))).view(-1, 1024)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0002.view(-1, 128, 8)))).view(-1, 1024)
		r0002 = self.c0015_2(self.c0015_1(self.torch.cat((r0001, r0003, r0002), dim=1).view(-1, 376, 8))).view(-1, 1536)
		r0002 = self.c0016_1((r0004 + r0002).view(-1, 192, 8)).view(-1, 1536)
		r0004 = self.c0017_3(self.c0017_2(self.c0017_1(r0002.view(-1, 192, 8)))).view(-1, 896)
		r0003 = self.c0018_3(self.c0018_2(self.c0018_1(r0002.view(-1, 192, 8)))).view(-1, 1024)
		r0001 = self.c0019_3(self.c0019_2(self.c0019_1(r0002.view(-1, 192, 8)))).view(-1, 1024)
		r0004 = self.c001a_3(self.c001a_2(self.c001a_1(r0004.view(-1, 112, 8)))).view(-1, 896)
		r0003 = self.c001b_3(self.c001b_2(self.c001b_1(r0003.view(-1, 128, 8)))).view(-1, 1024)
		r0001 = self.c001c_3(self.c001c_2(self.c001c_1(r0001.view(-1, 128, 8)))).view(-1, 1024)
		r0001 = self.c001d_2(self.c001d_1(self.torch.cat((r0004, r0003, r0001), dim=1).view(-1, 368, 8))).view(-1, 1536)
		r0001 = self.c001e_1((r0002 + r0001).view(-1, 192, 8)).view(-1, 1536)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0001.view(-1, 192, 8)))).view(-1, 1024)
		r0003 = self.c0020_3(self.c0020_2(self.c0020_1(r0001.view(-1, 192, 8)))).view(-1, 1024)
		r0004 = self.c0021_3(self.c0021_2(self.c0021_1(r0001.view(-1, 192, 8)))).view(-1, 1024)
		r0002 = self.c0022_3(self.c0022_2(self.c0022_1(r0002.view(-1, 128, 8)))).view(-1, 1024)
		r0003 = self.c0023_3(self.c0023_2(self.c0023_1(r0003.view(-1, 128, 8)))).view(-1, 1024)
		r0004 = self.c0024_3(self.c0024_2(self.c0024_1(r0004.view(-1, 128, 8)))).view(-1, 1024)
		r0004 = self.c0025_2(self.c0025_1(self.torch.cat((r0002, r0003, r0004), dim=1).view(-1, 384, 8))).view(-1, 1536)
		r0004 = self.c0026_1((r0001 + r0004).view(-1, 192, 8)).view(-1, 1536)
		r0001 = self.c0027_3(self.c0027_2(self.c0027_1(r0004.view(-1, 192, 8)))).view(-1, 960)
		r0003 = self.c0028_3(self.c0028_2(self.c0028_1(r0004.view(-1, 192, 8)))).view(-1, 1024)
		r0002 = self.c0029_3(self.c0029_2(self.c0029_1(r0004.view(-1, 192, 8)))).view(-1, 960)
		r0001 = self.c002a_3(self.c002a_2(self.c002a_1(r0001.view(-1, 120, 8)))).view(-1, 960)
		r0003 = self.c002b_3(self.c002b_2(self.c002b_1(r0003.view(-1, 128, 8)))).view(-1, 1024)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 120, 8)))).view(-1, 960)
		r0002 = self.c002d_2(self.c002d_1(self.torch.cat((r0001, r0003, r0002), dim=1).view(-1, 368, 8))).view(-1, 1536)
		r0002 = self.c002e_1((r0004 + r0002).view(-1, 192, 8)).view(-1, 1536)
		r0004 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 192, 8)))).view(-1, 1024)
		r0003 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 192, 8)))).view(-1, 896)
		r0001 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 192, 8)))).view(-1, 1024)
		r0004 = self.c0032_3(self.c0032_2(self.c0032_1(r0004.view(-1, 128, 8)))).view(-1, 1024)
		r0003 = self.c0033_3(self.c0033_2(self.c0033_1(r0003.view(-1, 112, 8)))).view(-1, 896)
		r0001 = self.c0034_3(self.c0034_2(self.c0034_1(r0001.view(-1, 128, 8)))).view(-1, 1024)
		r0001 = self.c0035_2(self.c0035_1(self.torch.cat((r0004, r0003, r0001), dim=1).view(-1, 368, 8))).view(-1, 1536)
		r0001 = self.c0036_1((r0002 + r0001).view(-1, 192, 8)).view(-1, 1536)
		r0001 = self.c0037_3(self.c0037_2(self.c0037_1(r0001.view(-1, 192, 8)))).view(-1, 704)
		r0002 = self.c0038_3(self.c0038_2(self.c0038_1(r0001.view(-1, 176, 4)))).view(-1, 512)
		r0003 = self.c0039_3(self.c0039_2(self.c0039_1(r0001.view(-1, 176, 4)))).view(-1, 416)
		r0004 = self.c003a_3(self.c003a_2(self.c003a_1(r0001.view(-1, 176, 4)))).view(-1, 512)
		r0002 = self.c003b_3(self.c003b_2(self.c003b_1(r0002.view(-1, 128, 4)))).view(-1, 512)
		r0003 = self.c003c_3(self.c003c_2(self.c003c_1(r0003.view(-1, 104, 4)))).view(-1, 416)
		r0004 = self.c003d_3(self.c003d_2(self.c003d_1(r0004.view(-1, 128, 4)))).view(-1, 512)
		r0004 = self.c003e_2(self.c003e_1(self.torch.cat((r0002, r0003, r0004), dim=1).view(-1, 360, 4))).view(-1, 704)
		r0004 = self.c003f_1((r0001 + r0004).view(-1, 176, 4)).view(-1, 704)
		r0001 = self.c0040_3(self.c0040_2(self.c0040_1(r0004.view(-1, 176, 4)))).view(-1, 512)
		r0003 = self.c0041_3(self.c0041_2(self.c0041_1(r0004.view(-1, 176, 4)))).view(-1, 512)
		r0002 = self.c0042_3(self.c0042_2(self.c0042_1(r0004.view(-1, 176, 4)))).view(-1, 448)
		r0001 = self.c0043_3(self.c0043_2(self.c0043_1(r0001.view(-1, 128, 4)))).view(-1, 512)
		r0003 = self.c0044_3(self.c0044_2(self.c0044_1(r0003.view(-1, 128, 4)))).view(-1, 512)
		r0002 = self.c0045_3(self.c0045_2(self.c0045_1(r0002.view(-1, 112, 4)))).view(-1, 448)
		r0002 = self.c0046_2(self.c0046_1(self.torch.cat((r0001, r0003, r0002), dim=1).view(-1, 368, 4))).view(-1, 704)
		r0002 = self.c0047_1((r0004 + r0002).view(-1, 176, 4)).view(-1, 704)
		r0004 = self.c0048_3(self.c0048_2(self.c0048_1(r0002.view(-1, 176, 4)))).view(-1, 416)
		r0003 = self.c0049_3(self.c0049_2(self.c0049_1(r0002.view(-1, 176, 4)))).view(-1, 480)
		r0001 = self.c004a_3(self.c004a_2(self.c004a_1(r0002.view(-1, 176, 4)))).view(-1, 448)
		r0004 = self.c004b_3(self.c004b_2(self.c004b_1(r0004.view(-1, 104, 4)))).view(-1, 416)
		r0003 = self.c004c_3(self.c004c_2(self.c004c_1(r0003.view(-1, 120, 4)))).view(-1, 480)
		r0001 = self.c004d_3(self.c004d_2(self.c004d_1(r0001.view(-1, 112, 4)))).view(-1, 448)
		r0001 = self.c004e_2(self.c004e_1(self.torch.cat((r0004, r0003, r0001), dim=1).view(-1, 336, 4))).view(-1, 704)
		r0001 = self.c004f_1((r0002 + r0001).view(-1, 176, 4)).view(-1, 704)
		r0002 = self.c0050_3(self.c0050_2(self.c0050_1(r0001.view(-1, 176, 4)))).view(-1, 384)
		r0003 = self.c0051_3(self.c0051_2(self.c0051_1(r0001.view(-1, 176, 4)))).view(-1, 512)
		r0004 = self.c0052_3(self.c0052_2(self.c0052_1(r0001.view(-1, 176, 4)))).view(-1, 512)
		r0002 = self.c0053_3(self.c0053_2(self.c0053_1(r0002.view(-1, 96, 4)))).view(-1, 384)
		r0003 = self.c0054_3(self.c0054_2(self.c0054_1(r0003.view(-1, 128, 4)))).view(-1, 512)
		r0004 = self.c0055_3(self.c0055_2(self.c0055_1(r0004.view(-1, 128, 4)))).view(-1, 512)
		r0004 = self.c0056_2(self.c0056_1(self.torch.cat((r0002, r0003, r0004), dim=1).view(-1, 352, 4))).view(-1, 704)
		r0004 = self.c0057_1((r0001 + r0004).view(-1, 176, 4)).view(-1, 704)
		r0004 = self.c0058_3(self.c0058_2(self.c0058_1(r0004.view(-1, 176, 4)))).view(-1, 496)
		r0001 = self.c0059_3(self.c0059_2(self.c0059_1(r0004.view(-1, 248, 2)))).view(-1, 256)
		r0003 = self.c005a_3(self.c005a_2(self.c005a_1(r0004.view(-1, 248, 2)))).view(-1, 256)
		r0002 = self.c005b_3(self.c005b_2(self.c005b_1(r0004.view(-1, 248, 2)))).view(-1, 256)
		r0001 = self.c005c_3(self.c005c_2(self.c005c_1(r0001.view(-1, 128, 2)))).view(-1, 256)
		r0003 = self.c005d_3(self.c005d_2(self.c005d_1(r0003.view(-1, 128, 2)))).view(-1, 256)
		r0002 = self.c005e_3(self.c005e_2(self.c005e_1(r0002.view(-1, 128, 2)))).view(-1, 256)
		r0002 = self.c005f_2(self.c005f_1(self.torch.cat((r0001, r0003, r0002), dim=1).view(-1, 384, 2))).view(-1, 496)
		r0002 = self.c0060_1((r0004 + r0002).view(-1, 248, 2)).view(-1, 496)
		r0002 = self.c0061_3(self.c0061_2(self.c0061_1(r0002.view(-1, 248, 2)))).view(-1, 200)
		r0002 = self.c0062_1(r0002)
		return r0002