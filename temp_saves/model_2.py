import torch
class M2(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 28, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(28)
		self.c0003_1 = torch.nn.BatchNorm1d(28)
		self.c0004_1 = torch.nn.Conv1d(28, 60, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(60)
		self.c0005_1 = torch.nn.Conv1d(60, 60, (7,), (1,), (3,), (1,), 60, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(60)
		self.c0006_1 = torch.nn.Conv1d(60, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.BatchNorm1d(28)
		self.c0007_1 = torch.nn.BatchNorm1d(28)
		self.c0008_1 = torch.nn.Conv1d(28, 88, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(88)
		self.c0009_1 = torch.nn.Conv1d(88, 88, (7,), (1,), (3,), (1,), 88, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(88)
		self.c000a_1 = torch.nn.Conv1d(88, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.BatchNorm1d(28)
		self.c000b_1 = torch.nn.BatchNorm1d(28)
		self.c000c_1 = torch.nn.Conv1d(28, 97, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(97)
		self.c000d_1 = torch.nn.Conv1d(97, 97, (7,), (1,), (3,), (1,), 97, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(97)
		self.c000e_1 = torch.nn.Conv1d(97, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.BatchNorm1d(28)
		self.c000f_1 = torch.nn.BatchNorm1d(28)
		self.c0010_1 = torch.nn.Conv1d(28, 98, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(98)
		self.c0011_1 = torch.nn.Conv1d(98, 98, (7,), (1,), (3,), (1,), 98, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(98)
		self.c0012_1 = torch.nn.Conv1d(98, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(28)
		self.c0013_1 = torch.nn.BatchNorm1d(28)
		self.c0014_1 = torch.nn.Conv1d(28, 56, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(56)
		self.c0015_1 = torch.nn.Conv1d(56, 56, (7,), (1,), (3,), (1,), 56, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(56)
		self.c0016_1 = torch.nn.Conv1d(56, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.BatchNorm1d(28)
		self.c0017_1 = torch.nn.BatchNorm1d(28)
		self.c0018_1 = torch.nn.Conv1d(28, 74, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(74)
		self.c0019_1 = torch.nn.Conv1d(74, 74, (7,), (1,), (3,), (1,), 74, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(74)
		self.c001a_1 = torch.nn.Conv1d(74, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.BatchNorm1d(28)
		self.c001b_1 = torch.nn.BatchNorm1d(28)
		self.c001c_1 = torch.nn.Conv1d(28, 30, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(30)
		self.c001d_1 = torch.nn.Conv1d(30, 30, (7,), (1,), (3,), (1,), 30, bias=True, padding_mode='zeros')
		self.c001d_2 = torch.nn.ReLU6()
		self.c001d_3 = torch.nn.BatchNorm1d(30)
		self.c001e_1 = torch.nn.Conv1d(30, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.BatchNorm1d(28)
		self.c001f_1 = torch.nn.BatchNorm1d(28)
		self.c0020_1 = torch.nn.Conv1d(28, 29, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.ReLU6()
		self.c0020_3 = torch.nn.BatchNorm1d(29)
		self.c0021_1 = torch.nn.Conv1d(29, 29, (7,), (1,), (3,), (1,), 29, bias=True, padding_mode='zeros')
		self.c0021_2 = torch.nn.ReLU6()
		self.c0021_3 = torch.nn.BatchNorm1d(29)
		self.c0022_1 = torch.nn.Conv1d(29, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.BatchNorm1d(28)
		self.c0023_1 = torch.nn.BatchNorm1d(28)
		self.c0024_1 = torch.nn.Conv1d(28, 65, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.ReLU6()
		self.c0024_3 = torch.nn.BatchNorm1d(65)
		self.c0025_1 = torch.nn.Conv1d(65, 65, (7,), (1,), (3,), (1,), 65, bias=True, padding_mode='zeros')
		self.c0025_2 = torch.nn.ReLU6()
		self.c0025_3 = torch.nn.BatchNorm1d(65)
		self.c0026_1 = torch.nn.Conv1d(65, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.BatchNorm1d(28)
		self.c0027_1 = torch.nn.BatchNorm1d(28)
		self.c0028_1 = torch.nn.Conv1d(28, 85, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.ReLU6()
		self.c0028_3 = torch.nn.BatchNorm1d(85)
		self.c0029_1 = torch.nn.Conv1d(85, 85, (7,), (1,), (3,), (1,), 85, bias=True, padding_mode='zeros')
		self.c0029_2 = torch.nn.ReLU6()
		self.c0029_3 = torch.nn.BatchNorm1d(85)
		self.c002a_1 = torch.nn.Conv1d(85, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.BatchNorm1d(28)
		self.c002b_1 = torch.nn.BatchNorm1d(28)
		self.c002c_1 = torch.nn.Conv1d(28, 104, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(104)
		self.c002d_1 = torch.nn.BatchNorm1d(104)
		self.c002e_1 = torch.nn.Conv1d(104, 129, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.ReLU6()
		self.c002e_3 = torch.nn.BatchNorm1d(129)
		self.c002f_1 = torch.nn.Conv1d(129, 129, (7,), (1,), (3,), (1,), 129, bias=True, padding_mode='zeros')
		self.c002f_2 = torch.nn.ReLU6()
		self.c002f_3 = torch.nn.BatchNorm1d(129)
		self.c0030_1 = torch.nn.Conv1d(129, 104, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.BatchNorm1d(104)
		self.c0031_1 = torch.nn.BatchNorm1d(104)
		self.c0032_1 = torch.nn.Conv1d(104, 212, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.ReLU6()
		self.c0032_3 = torch.nn.BatchNorm1d(212)
		self.c0033_1 = torch.nn.Conv1d(212, 212, (7,), (1,), (3,), (1,), 212, bias=True, padding_mode='zeros')
		self.c0033_2 = torch.nn.ReLU6()
		self.c0033_3 = torch.nn.BatchNorm1d(212)
		self.c0034_1 = torch.nn.Conv1d(212, 104, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0034_2 = torch.nn.BatchNorm1d(104)
		self.c0035_1 = torch.nn.BatchNorm1d(104)
		self.c0036_1 = torch.nn.Conv1d(104, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0036_2 = torch.nn.ReLU6()
		self.c0036_3 = torch.nn.BatchNorm1d(172)
		self.c0037_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0037_2 = torch.nn.ReLU6()
		self.c0037_3 = torch.nn.BatchNorm1d(172)
		self.c0038_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0038_2 = torch.nn.ReLU6()
		self.c0038_3 = torch.nn.BatchNorm1d(172)
		self.c0039_1 = torch.nn.BatchNorm1d(172)
		self.c003a_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003a_2 = torch.nn.ReLU6()
		self.c003a_3 = torch.nn.BatchNorm1d(172)
		self.c003b_1 = torch.nn.BatchNorm1d(172)
		self.c003c_1 = torch.nn.Conv1d(172, 172, (4,), (4,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c003c_2 = torch.nn.ReLU6()
		self.c003c_3 = torch.nn.BatchNorm1d(172)
		self.c003d_1 = torch.nn.Linear(172, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 917504)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 16384)))).view(-1, 245760)
		r0001 = self.c0001_1(r0001.view(-1, 15, 16384)).view(-1, 245760)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 16384)))).view(-1, 114688)
		r0001 = self.c0003_1(r0001.view(-1, 28, 4096)).view(-1, 114688)
		r0002 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 28, 4096)))).view(-1, 245760)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0002.view(-1, 60, 4096)))).view(-1, 245760)
		r0002 = self.c0006_2(self.c0006_1(r0002.view(-1, 60, 4096))).view(-1, 114688)
		r0002 = self.c0007_1((r0001 + r0002).view(-1, 28, 4096)).view(-1, 114688)
		r0001 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 28, 4096)))).view(-1, 360448)
		r0001 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 88, 4096)))).view(-1, 360448)
		r0001 = self.c000a_2(self.c000a_1(r0001.view(-1, 88, 4096))).view(-1, 114688)
		r0001 = self.c000b_1((r0002 + r0001).view(-1, 28, 4096)).view(-1, 114688)
		r0002 = self.c000c_3(self.c000c_2(self.c000c_1(r0001.view(-1, 28, 4096)))).view(-1, 397312)
		r0002 = self.c000d_3(self.c000d_2(self.c000d_1(r0002.view(-1, 97, 4096)))).view(-1, 397312)
		r0002 = self.c000e_2(self.c000e_1(r0002.view(-1, 97, 4096))).view(-1, 114688)
		r0002 = self.c000f_1((r0001 + r0002).view(-1, 28, 4096)).view(-1, 114688)
		r0001 = self.c0010_3(self.c0010_2(self.c0010_1(r0002.view(-1, 28, 4096)))).view(-1, 401408)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 98, 4096)))).view(-1, 401408)
		r0001 = self.c0012_2(self.c0012_1(r0001.view(-1, 98, 4096))).view(-1, 114688)
		r0001 = self.c0013_1((r0002 + r0001).view(-1, 28, 4096)).view(-1, 114688)
		r0002 = self.c0014_3(self.c0014_2(self.c0014_1(r0001.view(-1, 28, 4096)))).view(-1, 229376)
		r0002 = self.c0015_3(self.c0015_2(self.c0015_1(r0002.view(-1, 56, 4096)))).view(-1, 229376)
		r0002 = self.c0016_2(self.c0016_1(r0002.view(-1, 56, 4096))).view(-1, 114688)
		r0002 = self.c0017_1((r0001 + r0002).view(-1, 28, 4096)).view(-1, 114688)
		r0001 = self.c0018_3(self.c0018_2(self.c0018_1(r0002.view(-1, 28, 4096)))).view(-1, 303104)
		r0001 = self.c0019_3(self.c0019_2(self.c0019_1(r0001.view(-1, 74, 4096)))).view(-1, 303104)
		r0001 = self.c001a_2(self.c001a_1(r0001.view(-1, 74, 4096))).view(-1, 114688)
		r0001 = self.c001b_1((r0002 + r0001).view(-1, 28, 4096)).view(-1, 114688)
		r0002 = self.c001c_3(self.c001c_2(self.c001c_1(r0001.view(-1, 28, 4096)))).view(-1, 122880)
		r0002 = self.c001d_3(self.c001d_2(self.c001d_1(r0002.view(-1, 30, 4096)))).view(-1, 122880)
		r0002 = self.c001e_2(self.c001e_1(r0002.view(-1, 30, 4096))).view(-1, 114688)
		r0002 = self.c001f_1((r0001 + r0002).view(-1, 28, 4096)).view(-1, 114688)
		r0001 = self.c0020_3(self.c0020_2(self.c0020_1(r0002.view(-1, 28, 4096)))).view(-1, 118784)
		r0001 = self.c0021_3(self.c0021_2(self.c0021_1(r0001.view(-1, 29, 4096)))).view(-1, 118784)
		r0001 = self.c0022_2(self.c0022_1(r0001.view(-1, 29, 4096))).view(-1, 114688)
		r0001 = self.c0023_1((r0002 + r0001).view(-1, 28, 4096)).view(-1, 114688)
		r0002 = self.c0024_3(self.c0024_2(self.c0024_1(r0001.view(-1, 28, 4096)))).view(-1, 266240)
		r0002 = self.c0025_3(self.c0025_2(self.c0025_1(r0002.view(-1, 65, 4096)))).view(-1, 266240)
		r0002 = self.c0026_2(self.c0026_1(r0002.view(-1, 65, 4096))).view(-1, 114688)
		r0002 = self.c0027_1((r0001 + r0002).view(-1, 28, 4096)).view(-1, 114688)
		r0001 = self.c0028_3(self.c0028_2(self.c0028_1(r0002.view(-1, 28, 4096)))).view(-1, 348160)
		r0001 = self.c0029_3(self.c0029_2(self.c0029_1(r0001.view(-1, 85, 4096)))).view(-1, 348160)
		r0001 = self.c002a_2(self.c002a_1(r0001.view(-1, 85, 4096))).view(-1, 114688)
		r0001 = self.c002b_1((r0002 + r0001).view(-1, 28, 4096)).view(-1, 114688)
		r0001 = self.c002c_3(self.c002c_2(self.c002c_1(r0001.view(-1, 28, 4096)))).view(-1, 106496)
		r0001 = self.c002d_1(r0001.view(-1, 104, 1024)).view(-1, 106496)
		r0002 = self.c002e_3(self.c002e_2(self.c002e_1(r0001.view(-1, 104, 1024)))).view(-1, 132096)
		r0002 = self.c002f_3(self.c002f_2(self.c002f_1(r0002.view(-1, 129, 1024)))).view(-1, 132096)
		r0002 = self.c0030_2(self.c0030_1(r0002.view(-1, 129, 1024))).view(-1, 106496)
		r0002 = self.c0031_1((r0001 + r0002).view(-1, 104, 1024)).view(-1, 106496)
		r0001 = self.c0032_3(self.c0032_2(self.c0032_1(r0002.view(-1, 104, 1024)))).view(-1, 217088)
		r0001 = self.c0033_3(self.c0033_2(self.c0033_1(r0001.view(-1, 212, 1024)))).view(-1, 217088)
		r0001 = self.c0034_2(self.c0034_1(r0001.view(-1, 212, 1024))).view(-1, 106496)
		r0001 = self.c0035_1((r0002 + r0001).view(-1, 104, 1024)).view(-1, 106496)
		r0001 = self.c0036_3(self.c0036_2(self.c0036_1(r0001.view(-1, 104, 1024)))).view(-1, 44032)
		r0001 = self.c0037_3(self.c0037_2(self.c0037_1(r0001.view(-1, 172, 256)))).view(-1, 11008)
		r0001 = self.c0038_3(self.c0038_2(self.c0038_1(r0001.view(-1, 172, 64)))).view(-1, 2752)
		r0001 = self.c0039_1(r0001.view(-1, 172, 16)).view(-1, 2752)
		r0001 = self.c003a_3(self.c003a_2(self.c003a_1(r0001.view(-1, 172, 16)))).view(-1, 688)
		r0001 = self.c003b_1(r0001.view(-1, 172, 4)).view(-1, 688)
		r0001 = self.c003c_3(self.c003c_2(self.c003c_1(r0001.view(-1, 172, 4)))).view(-1, 172)
		r0001 = self.c003d_1(r0001)
		return r0001