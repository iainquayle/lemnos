import torch
class M2(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 10, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(10)
		self.c0001_1 = torch.nn.BatchNorm1d(10)
		self.c0002_1 = torch.nn.Conv1d(10, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(16)
		self.c0003_1 = torch.nn.Conv1d(16, 24, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0003_2 = torch.nn.ReLU6()
		self.c0003_3 = torch.nn.BatchNorm1d(24)
		self.c0004_1 = torch.nn.BatchNorm1d(24)
		self.c0005_1 = torch.nn.Conv1d(24, 39, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(39)
		self.c0006_1 = torch.nn.BatchNorm1d(39)
		self.c0007_1 = torch.nn.Conv1d(39, 42, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(42)
		self.c0008_1 = torch.nn.Conv1d(42, 67, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(67)
		self.c0009_1 = torch.nn.BatchNorm1d(67)
		self.c000a_1 = torch.nn.Conv1d(67, 224, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(224)
		self.c000b_1 = torch.nn.Conv1d(224, 224, (7,), (1,), (3,), (1,), 224, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(224)
		self.c000c_1 = torch.nn.Conv1d(224, 67, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.BatchNorm1d(67)
		self.c000d_1 = torch.nn.BatchNorm1d(67)
		self.c000e_1 = torch.nn.Conv1d(67, 112, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(112)
		self.c000f_1 = torch.nn.Conv1d(112, 112, (7,), (1,), (3,), (1,), 112, bias=True, padding_mode='zeros')
		self.c000f_2 = torch.nn.ReLU6()
		self.c000f_3 = torch.nn.BatchNorm1d(112)
		self.c0010_1 = torch.nn.Conv1d(112, 67, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.BatchNorm1d(67)
		self.c0011_1 = torch.nn.BatchNorm1d(67)
		self.c0012_1 = torch.nn.Conv1d(67, 202, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.ReLU6()
		self.c0012_3 = torch.nn.BatchNorm1d(202)
		self.c0013_1 = torch.nn.Conv1d(202, 202, (7,), (1,), (3,), (1,), 202, bias=True, padding_mode='zeros')
		self.c0013_2 = torch.nn.ReLU6()
		self.c0013_3 = torch.nn.BatchNorm1d(202)
		self.c0014_1 = torch.nn.Conv1d(202, 67, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.BatchNorm1d(67)
		self.c0015_1 = torch.nn.BatchNorm1d(67)
		self.c0016_1 = torch.nn.Conv1d(67, 80, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(80)
		self.c0017_1 = torch.nn.Conv1d(80, 80, (7,), (1,), (3,), (1,), 80, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(80)
		self.c0018_1 = torch.nn.Conv1d(80, 67, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.BatchNorm1d(67)
		self.c0019_1 = torch.nn.BatchNorm1d(67)
		self.c001a_1 = torch.nn.Conv1d(67, 78, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(78)
		self.c001b_1 = torch.nn.BatchNorm1d(78)
		self.c001c_1 = torch.nn.Conv1d(78, 33, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(33)
		self.c001d_1 = torch.nn.BatchNorm1d(33)
		self.c001e_1 = torch.nn.Conv1d(33, 117, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(117)
		self.c001f_1 = torch.nn.Conv1d(117, 117, (7,), (1,), (3,), (1,), 117, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(117)
		self.c0020_1 = torch.nn.Conv1d(117, 33, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(33)
		self.c0021_1 = torch.nn.BatchNorm1d(33)
		self.c0022_1 = torch.nn.Conv1d(33, 83, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(83)
		self.c0023_1 = torch.nn.Conv1d(83, 83, (7,), (1,), (3,), (1,), 83, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(83)
		self.c0024_1 = torch.nn.Conv1d(83, 33, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.BatchNorm1d(33)
		self.c0025_1 = torch.nn.BatchNorm1d(33)
		self.c0026_1 = torch.nn.Conv1d(33, 97, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.ReLU6()
		self.c0026_3 = torch.nn.BatchNorm1d(97)
		self.c0027_1 = torch.nn.Conv1d(97, 97, (7,), (1,), (3,), (1,), 97, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(97)
		self.c0028_1 = torch.nn.Conv1d(97, 33, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.BatchNorm1d(33)
		self.c0029_1 = torch.nn.BatchNorm1d(33)
		self.c002a_1 = torch.nn.Conv1d(33, 44, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.ReLU6()
		self.c002a_3 = torch.nn.BatchNorm1d(44)
		self.c002b_1 = torch.nn.Conv1d(44, 44, (7,), (1,), (3,), (1,), 44, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(44)
		self.c002c_1 = torch.nn.Conv1d(44, 33, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.BatchNorm1d(33)
		self.c002d_1 = torch.nn.BatchNorm1d(33)
		self.c002e_1 = torch.nn.Conv1d(33, 49, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.ReLU6()
		self.c002e_3 = torch.nn.BatchNorm1d(49)
		self.c002f_1 = torch.nn.BatchNorm1d(49)
		self.c0030_1 = torch.nn.Linear(49, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 2560)
		r0001 = self.c0001_1(r0001.view(-1, 10, 256)).view(-1, 2560)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 10, 256)))).view(-1, 2048)
		r0001 = self.c0003_3(self.c0003_2(self.c0003_1(r0001.view(-1, 16, 128)))).view(-1, 1536)
		r0001 = self.c0004_1(r0001.view(-1, 24, 64)).view(-1, 1536)
		r0001 = self.c0005_3(self.c0005_2(self.c0005_1(r0001.view(-1, 24, 64)))).view(-1, 1248)
		r0001 = self.c0006_1(r0001.view(-1, 39, 32)).view(-1, 1248)
		r0001 = self.c0007_3(self.c0007_2(self.c0007_1(r0001.view(-1, 39, 32)))).view(-1, 672)
		r0001 = self.c0008_3(self.c0008_2(self.c0008_1(r0001.view(-1, 42, 16)))).view(-1, 536)
		r0001 = self.c0009_1(r0001.view(-1, 67, 8)).view(-1, 536)
		r0002 = self.c000a_3(self.c000a_2(self.c000a_1(r0001.view(-1, 67, 8)))).view(-1, 1792)
		r0002 = self.c000b_3(self.c000b_2(self.c000b_1(r0002.view(-1, 224, 8)))).view(-1, 1792)
		r0002 = self.c000c_2(self.c000c_1(r0002.view(-1, 224, 8))).view(-1, 536)
		r0002 = self.c000d_1((r0001 + r0002).view(-1, 67, 8)).view(-1, 536)
		r0001 = self.c000e_3(self.c000e_2(self.c000e_1(r0002.view(-1, 67, 8)))).view(-1, 896)
		r0001 = self.c000f_3(self.c000f_2(self.c000f_1(r0001.view(-1, 112, 8)))).view(-1, 896)
		r0001 = self.c0010_2(self.c0010_1(r0001.view(-1, 112, 8))).view(-1, 536)
		r0001 = self.c0011_1((r0002 + r0001).view(-1, 67, 8)).view(-1, 536)
		r0002 = self.c0012_3(self.c0012_2(self.c0012_1(r0001.view(-1, 67, 8)))).view(-1, 1616)
		r0002 = self.c0013_3(self.c0013_2(self.c0013_1(r0002.view(-1, 202, 8)))).view(-1, 1616)
		r0002 = self.c0014_2(self.c0014_1(r0002.view(-1, 202, 8))).view(-1, 536)
		r0002 = self.c0015_1((r0001 + r0002).view(-1, 67, 8)).view(-1, 536)
		r0001 = self.c0016_3(self.c0016_2(self.c0016_1(r0002.view(-1, 67, 8)))).view(-1, 640)
		r0001 = self.c0017_3(self.c0017_2(self.c0017_1(r0001.view(-1, 80, 8)))).view(-1, 640)
		r0001 = self.c0018_2(self.c0018_1(r0001.view(-1, 80, 8))).view(-1, 536)
		r0001 = self.c0019_1((r0002 + r0001).view(-1, 67, 8)).view(-1, 536)
		r0001 = self.c001a_3(self.c001a_2(self.c001a_1(r0001.view(-1, 67, 8)))).view(-1, 312)
		r0001 = self.c001b_1(r0001.view(-1, 78, 4)).view(-1, 312)
		r0001 = self.c001c_3(self.c001c_2(self.c001c_1(r0001.view(-1, 78, 4)))).view(-1, 66)
		r0001 = self.c001d_1(r0001.view(-1, 33, 2)).view(-1, 66)
		r0002 = self.c001e_3(self.c001e_2(self.c001e_1(r0001.view(-1, 33, 2)))).view(-1, 234)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 117, 2)))).view(-1, 234)
		r0002 = self.c0020_2(self.c0020_1(r0002.view(-1, 117, 2))).view(-1, 66)
		r0002 = self.c0021_1((r0001 + r0002).view(-1, 33, 2)).view(-1, 66)
		r0001 = self.c0022_3(self.c0022_2(self.c0022_1(r0002.view(-1, 33, 2)))).view(-1, 166)
		r0001 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 83, 2)))).view(-1, 166)
		r0001 = self.c0024_2(self.c0024_1(r0001.view(-1, 83, 2))).view(-1, 66)
		r0001 = self.c0025_1((r0002 + r0001).view(-1, 33, 2)).view(-1, 66)
		r0002 = self.c0026_3(self.c0026_2(self.c0026_1(r0001.view(-1, 33, 2)))).view(-1, 194)
		r0002 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 97, 2)))).view(-1, 194)
		r0002 = self.c0028_2(self.c0028_1(r0002.view(-1, 97, 2))).view(-1, 66)
		r0002 = self.c0029_1((r0001 + r0002).view(-1, 33, 2)).view(-1, 66)
		r0001 = self.c002a_3(self.c002a_2(self.c002a_1(r0002.view(-1, 33, 2)))).view(-1, 88)
		r0001 = self.c002b_3(self.c002b_2(self.c002b_1(r0001.view(-1, 44, 2)))).view(-1, 88)
		r0001 = self.c002c_2(self.c002c_1(r0001.view(-1, 44, 2))).view(-1, 66)
		r0001 = self.c002d_1((r0002 + r0001).view(-1, 33, 2)).view(-1, 66)
		r0001 = self.c002e_3(self.c002e_2(self.c002e_1(r0001.view(-1, 33, 2)))).view(-1, 49)
		r0001 = self.c002f_1(r0001.view(-1, 49, 1)).view(-1, 49)
		r0001 = self.c0030_1(r0001)
		return r0001