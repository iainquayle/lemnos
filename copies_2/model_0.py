import torch
class M0(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 29, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(29)
		self.c0003_1 = torch.nn.BatchNorm1d(29)
		self.c0004_1 = torch.nn.Conv1d(29, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(35)
		self.c0005_1 = torch.nn.Conv1d(35, 35, (7,), (1,), (3,), (1,), 35, bias=True, padding_mode='zeros')
		self.c0005_2 = torch.nn.ReLU6()
		self.c0005_3 = torch.nn.BatchNorm1d(35)
		self.c0006_1 = torch.nn.Conv1d(35, 29, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.BatchNorm1d(29)
		self.c0007_1 = torch.nn.BatchNorm1d(29)
		self.c0008_1 = torch.nn.Conv1d(29, 71, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.ReLU6()
		self.c0008_3 = torch.nn.BatchNorm1d(71)
		self.c0009_1 = torch.nn.Conv1d(71, 71, (7,), (1,), (3,), (1,), 71, bias=True, padding_mode='zeros')
		self.c0009_2 = torch.nn.ReLU6()
		self.c0009_3 = torch.nn.BatchNorm1d(71)
		self.c000a_1 = torch.nn.Conv1d(71, 29, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.BatchNorm1d(29)
		self.c000b_1 = torch.nn.BatchNorm1d(29)
		self.c000c_1 = torch.nn.Conv1d(29, 49, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.ReLU6()
		self.c000c_3 = torch.nn.BatchNorm1d(49)
		self.c000d_1 = torch.nn.Conv1d(49, 49, (7,), (1,), (3,), (1,), 49, bias=True, padding_mode='zeros')
		self.c000d_2 = torch.nn.ReLU6()
		self.c000d_3 = torch.nn.BatchNorm1d(49)
		self.c000e_1 = torch.nn.Conv1d(49, 29, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.BatchNorm1d(29)
		self.c000f_1 = torch.nn.BatchNorm1d(29)
		self.c0010_1 = torch.nn.Conv1d(29, 66, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(66)
		self.c0011_1 = torch.nn.Conv1d(66, 66, (7,), (1,), (3,), (1,), 66, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(66)
		self.c0012_1 = torch.nn.Conv1d(66, 29, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(29)
		self.c0013_1 = torch.nn.BatchNorm1d(29)
		self.c0014_1 = torch.nn.Conv1d(29, 47, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(47)
		self.c0015_1 = torch.nn.BatchNorm1d(47)
		self.c0016_1 = torch.nn.Conv1d(47, 89, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.ReLU6()
		self.c0016_3 = torch.nn.BatchNorm1d(89)
		self.c0017_1 = torch.nn.Conv1d(89, 89, (7,), (1,), (3,), (1,), 89, bias=True, padding_mode='zeros')
		self.c0017_2 = torch.nn.ReLU6()
		self.c0017_3 = torch.nn.BatchNorm1d(89)
		self.c0018_1 = torch.nn.Conv1d(89, 47, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.BatchNorm1d(47)
		self.c0019_1 = torch.nn.BatchNorm1d(47)
		self.c001a_1 = torch.nn.Conv1d(47, 100, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.ReLU6()
		self.c001a_3 = torch.nn.BatchNorm1d(100)
		self.c001b_1 = torch.nn.Conv1d(100, 100, (7,), (1,), (3,), (1,), 100, bias=True, padding_mode='zeros')
		self.c001b_2 = torch.nn.ReLU6()
		self.c001b_3 = torch.nn.BatchNorm1d(100)
		self.c001c_1 = torch.nn.Conv1d(100, 47, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.BatchNorm1d(47)
		self.c001d_1 = torch.nn.BatchNorm1d(47)
		self.c001e_1 = torch.nn.Conv1d(47, 179, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(179)
		self.c001f_1 = torch.nn.Conv1d(179, 179, (7,), (1,), (3,), (1,), 179, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(179)
		self.c0020_1 = torch.nn.Conv1d(179, 47, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(47)
		self.c0021_1 = torch.nn.BatchNorm1d(47)
		self.c0022_1 = torch.nn.Conv1d(47, 149, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(149)
		self.c0023_1 = torch.nn.Conv1d(149, 149, (7,), (1,), (3,), (1,), 149, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(149)
		self.c0024_1 = torch.nn.Conv1d(149, 47, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.BatchNorm1d(47)
		self.c0025_1 = torch.nn.BatchNorm1d(47)
		self.c0026_1 = torch.nn.Conv1d(47, 139, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.ReLU6()
		self.c0026_3 = torch.nn.BatchNorm1d(139)
		self.c0027_1 = torch.nn.Conv1d(139, 139, (7,), (1,), (3,), (1,), 139, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(139)
		self.c0028_1 = torch.nn.Conv1d(139, 47, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.BatchNorm1d(47)
		self.c0029_1 = torch.nn.BatchNorm1d(47)
		self.c002a_1 = torch.nn.Conv1d(47, 83, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.ReLU6()
		self.c002a_3 = torch.nn.BatchNorm1d(83)
		self.c002b_1 = torch.nn.BatchNorm1d(83)
		self.c002c_1 = torch.nn.Conv1d(83, 165, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.ReLU6()
		self.c002c_3 = torch.nn.BatchNorm1d(165)
		self.c002d_1 = torch.nn.BatchNorm1d(165)
		self.c002e_1 = torch.nn.Conv1d(165, 109, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.ReLU6()
		self.c002e_3 = torch.nn.BatchNorm1d(109)
		self.c002f_1 = torch.nn.BatchNorm1d(109)
		self.c0030_1 = torch.nn.Conv1d(109, 47, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(47)
		self.c0031_1 = torch.nn.Conv1d(47, 84, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.ReLU6()
		self.c0031_3 = torch.nn.BatchNorm1d(84)
		self.c0032_1 = torch.nn.Conv1d(84, 54, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.ReLU6()
		self.c0032_3 = torch.nn.BatchNorm1d(54)
		self.c0033_1 = torch.nn.Linear(54, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 3712)
		r0001 = self.c0003_1(r0001.view(-1, 29, 128)).view(-1, 3712)
		r0002 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 29, 128)))).view(-1, 4480)
		r0002 = self.c0005_3(self.c0005_2(self.c0005_1(r0002.view(-1, 35, 128)))).view(-1, 4480)
		r0002 = self.c0006_2(self.c0006_1(r0002.view(-1, 35, 128))).view(-1, 3712)
		r0002 = self.c0007_1((r0001 + r0002).view(-1, 29, 128)).view(-1, 3712)
		r0001 = self.c0008_3(self.c0008_2(self.c0008_1(r0002.view(-1, 29, 128)))).view(-1, 9088)
		r0001 = self.c0009_3(self.c0009_2(self.c0009_1(r0001.view(-1, 71, 128)))).view(-1, 9088)
		r0001 = self.c000a_2(self.c000a_1(r0001.view(-1, 71, 128))).view(-1, 3712)
		r0001 = self.c000b_1((r0002 + r0001).view(-1, 29, 128)).view(-1, 3712)
		r0002 = self.c000c_3(self.c000c_2(self.c000c_1(r0001.view(-1, 29, 128)))).view(-1, 6272)
		r0002 = self.c000d_3(self.c000d_2(self.c000d_1(r0002.view(-1, 49, 128)))).view(-1, 6272)
		r0002 = self.c000e_2(self.c000e_1(r0002.view(-1, 49, 128))).view(-1, 3712)
		r0002 = self.c000f_1((r0001 + r0002).view(-1, 29, 128)).view(-1, 3712)
		r0001 = self.c0010_3(self.c0010_2(self.c0010_1(r0002.view(-1, 29, 128)))).view(-1, 8448)
		r0001 = self.c0011_3(self.c0011_2(self.c0011_1(r0001.view(-1, 66, 128)))).view(-1, 8448)
		r0001 = self.c0012_2(self.c0012_1(r0001.view(-1, 66, 128))).view(-1, 3712)
		r0001 = self.c0013_1((r0002 + r0001).view(-1, 29, 128)).view(-1, 3712)
		r0001 = self.c0014_3(self.c0014_2(self.c0014_1(r0001.view(-1, 29, 128)))).view(-1, 3008)
		r0001 = self.c0015_1(r0001.view(-1, 47, 64)).view(-1, 3008)
		r0002 = self.c0016_3(self.c0016_2(self.c0016_1(r0001.view(-1, 47, 64)))).view(-1, 5696)
		r0002 = self.c0017_3(self.c0017_2(self.c0017_1(r0002.view(-1, 89, 64)))).view(-1, 5696)
		r0002 = self.c0018_2(self.c0018_1(r0002.view(-1, 89, 64))).view(-1, 3008)
		r0002 = self.c0019_1((r0001 + r0002).view(-1, 47, 64)).view(-1, 3008)
		r0001 = self.c001a_3(self.c001a_2(self.c001a_1(r0002.view(-1, 47, 64)))).view(-1, 6400)
		r0001 = self.c001b_3(self.c001b_2(self.c001b_1(r0001.view(-1, 100, 64)))).view(-1, 6400)
		r0001 = self.c001c_2(self.c001c_1(r0001.view(-1, 100, 64))).view(-1, 3008)
		r0001 = self.c001d_1((r0002 + r0001).view(-1, 47, 64)).view(-1, 3008)
		r0002 = self.c001e_3(self.c001e_2(self.c001e_1(r0001.view(-1, 47, 64)))).view(-1, 11456)
		r0002 = self.c001f_3(self.c001f_2(self.c001f_1(r0002.view(-1, 179, 64)))).view(-1, 11456)
		r0002 = self.c0020_2(self.c0020_1(r0002.view(-1, 179, 64))).view(-1, 3008)
		r0002 = self.c0021_1((r0001 + r0002).view(-1, 47, 64)).view(-1, 3008)
		r0001 = self.c0022_3(self.c0022_2(self.c0022_1(r0002.view(-1, 47, 64)))).view(-1, 9536)
		r0001 = self.c0023_3(self.c0023_2(self.c0023_1(r0001.view(-1, 149, 64)))).view(-1, 9536)
		r0001 = self.c0024_2(self.c0024_1(r0001.view(-1, 149, 64))).view(-1, 3008)
		r0001 = self.c0025_1((r0002 + r0001).view(-1, 47, 64)).view(-1, 3008)
		r0002 = self.c0026_3(self.c0026_2(self.c0026_1(r0001.view(-1, 47, 64)))).view(-1, 8896)
		r0002 = self.c0027_3(self.c0027_2(self.c0027_1(r0002.view(-1, 139, 64)))).view(-1, 8896)
		r0002 = self.c0028_2(self.c0028_1(r0002.view(-1, 139, 64))).view(-1, 3008)
		r0002 = self.c0029_1((r0001 + r0002).view(-1, 47, 64)).view(-1, 3008)
		r0002 = self.c002a_3(self.c002a_2(self.c002a_1(r0002.view(-1, 47, 64)))).view(-1, 2656)
		r0002 = self.c002b_1(r0002.view(-1, 83, 32)).view(-1, 2656)
		r0002 = self.c002c_3(self.c002c_2(self.c002c_1(r0002.view(-1, 83, 32)))).view(-1, 2640)
		r0002 = self.c002d_1(r0002.view(-1, 165, 16)).view(-1, 2640)
		r0002 = self.c002e_3(self.c002e_2(self.c002e_1(r0002.view(-1, 165, 16)))).view(-1, 872)
		r0002 = self.c002f_1(r0002.view(-1, 109, 8)).view(-1, 872)
		r0002 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 109, 8)))).view(-1, 188)
		r0002 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 47, 4)))).view(-1, 168)
		r0002 = self.c0032_3(self.c0032_2(self.c0032_1(r0002.view(-1, 84, 2)))).view(-1, 54)
		r0002 = self.c0033_1(r0002)
		return r0002