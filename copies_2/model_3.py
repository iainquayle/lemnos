import torch
class M3(torch.nn.Module):
	def __init__(self):
		super().__init__()
		import torch
		self.c0000_1 = torch.nn.Conv1d(56, 15, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0000_2 = torch.nn.ReLU6()
		self.c0000_3 = torch.nn.BatchNorm1d(15)
		self.c0001_1 = torch.nn.BatchNorm1d(15)
		self.c0002_1 = torch.nn.Conv1d(15, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0002_2 = torch.nn.ReLU6()
		self.c0002_3 = torch.nn.BatchNorm1d(16)
		self.c0003_1 = torch.nn.BatchNorm1d(16)
		self.c0004_1 = torch.nn.Conv1d(16, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0004_2 = torch.nn.ReLU6()
		self.c0004_3 = torch.nn.BatchNorm1d(16)
		self.c0005_1 = torch.nn.BatchNorm1d(16)
		self.c0006_1 = torch.nn.Conv1d(16, 52, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0006_2 = torch.nn.ReLU6()
		self.c0006_3 = torch.nn.BatchNorm1d(52)
		self.c0007_1 = torch.nn.Conv1d(52, 52, (7,), (1,), (3,), (1,), 52, bias=True, padding_mode='zeros')
		self.c0007_2 = torch.nn.ReLU6()
		self.c0007_3 = torch.nn.BatchNorm1d(52)
		self.c0008_1 = torch.nn.Conv1d(52, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0008_2 = torch.nn.BatchNorm1d(16)
		self.c0009_1 = torch.nn.BatchNorm1d(16)
		self.c000a_1 = torch.nn.Conv1d(16, 22, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000a_2 = torch.nn.ReLU6()
		self.c000a_3 = torch.nn.BatchNorm1d(22)
		self.c000b_1 = torch.nn.Conv1d(22, 22, (7,), (1,), (3,), (1,), 22, bias=True, padding_mode='zeros')
		self.c000b_2 = torch.nn.ReLU6()
		self.c000b_3 = torch.nn.BatchNorm1d(22)
		self.c000c_1 = torch.nn.Conv1d(22, 16, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000c_2 = torch.nn.BatchNorm1d(16)
		self.c000d_1 = torch.nn.BatchNorm1d(16)
		self.c000e_1 = torch.nn.Conv1d(16, 28, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c000e_2 = torch.nn.ReLU6()
		self.c000e_3 = torch.nn.BatchNorm1d(28)
		self.c000f_1 = torch.nn.BatchNorm1d(28)
		self.c0010_1 = torch.nn.Conv1d(28, 31, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0010_2 = torch.nn.ReLU6()
		self.c0010_3 = torch.nn.BatchNorm1d(31)
		self.c0011_1 = torch.nn.Conv1d(31, 31, (7,), (1,), (3,), (1,), 31, bias=True, padding_mode='zeros')
		self.c0011_2 = torch.nn.ReLU6()
		self.c0011_3 = torch.nn.BatchNorm1d(31)
		self.c0012_1 = torch.nn.Conv1d(31, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0012_2 = torch.nn.BatchNorm1d(28)
		self.c0013_1 = torch.nn.BatchNorm1d(28)
		self.c0014_1 = torch.nn.Conv1d(28, 35, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0014_2 = torch.nn.ReLU6()
		self.c0014_3 = torch.nn.BatchNorm1d(35)
		self.c0015_1 = torch.nn.Conv1d(35, 35, (7,), (1,), (3,), (1,), 35, bias=True, padding_mode='zeros')
		self.c0015_2 = torch.nn.ReLU6()
		self.c0015_3 = torch.nn.BatchNorm1d(35)
		self.c0016_1 = torch.nn.Conv1d(35, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0016_2 = torch.nn.BatchNorm1d(28)
		self.c0017_1 = torch.nn.BatchNorm1d(28)
		self.c0018_1 = torch.nn.Conv1d(28, 66, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0018_2 = torch.nn.ReLU6()
		self.c0018_3 = torch.nn.BatchNorm1d(66)
		self.c0019_1 = torch.nn.Conv1d(66, 66, (7,), (1,), (3,), (1,), 66, bias=True, padding_mode='zeros')
		self.c0019_2 = torch.nn.ReLU6()
		self.c0019_3 = torch.nn.BatchNorm1d(66)
		self.c001a_1 = torch.nn.Conv1d(66, 28, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001a_2 = torch.nn.BatchNorm1d(28)
		self.c001b_1 = torch.nn.BatchNorm1d(28)
		self.c001c_1 = torch.nn.Conv1d(28, 43, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001c_2 = torch.nn.ReLU6()
		self.c001c_3 = torch.nn.BatchNorm1d(43)
		self.c001d_1 = torch.nn.BatchNorm1d(43)
		self.c001e_1 = torch.nn.Conv1d(43, 80, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c001e_2 = torch.nn.ReLU6()
		self.c001e_3 = torch.nn.BatchNorm1d(80)
		self.c001f_1 = torch.nn.Conv1d(80, 80, (7,), (1,), (3,), (1,), 80, bias=True, padding_mode='zeros')
		self.c001f_2 = torch.nn.ReLU6()
		self.c001f_3 = torch.nn.BatchNorm1d(80)
		self.c0020_1 = torch.nn.Conv1d(80, 43, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0020_2 = torch.nn.BatchNorm1d(43)
		self.c0021_1 = torch.nn.BatchNorm1d(43)
		self.c0022_1 = torch.nn.Conv1d(43, 87, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0022_2 = torch.nn.ReLU6()
		self.c0022_3 = torch.nn.BatchNorm1d(87)
		self.c0023_1 = torch.nn.Conv1d(87, 87, (7,), (1,), (3,), (1,), 87, bias=True, padding_mode='zeros')
		self.c0023_2 = torch.nn.ReLU6()
		self.c0023_3 = torch.nn.BatchNorm1d(87)
		self.c0024_1 = torch.nn.Conv1d(87, 43, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0024_2 = torch.nn.BatchNorm1d(43)
		self.c0025_1 = torch.nn.BatchNorm1d(43)
		self.c0026_1 = torch.nn.Conv1d(43, 140, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0026_2 = torch.nn.ReLU6()
		self.c0026_3 = torch.nn.BatchNorm1d(140)
		self.c0027_1 = torch.nn.Conv1d(140, 140, (7,), (1,), (3,), (1,), 140, bias=True, padding_mode='zeros')
		self.c0027_2 = torch.nn.ReLU6()
		self.c0027_3 = torch.nn.BatchNorm1d(140)
		self.c0028_1 = torch.nn.Conv1d(140, 43, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0028_2 = torch.nn.BatchNorm1d(43)
		self.c0029_1 = torch.nn.BatchNorm1d(43)
		self.c002a_1 = torch.nn.Conv1d(43, 91, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002a_2 = torch.nn.ReLU6()
		self.c002a_3 = torch.nn.BatchNorm1d(91)
		self.c002b_1 = torch.nn.Conv1d(91, 91, (7,), (1,), (3,), (1,), 91, bias=True, padding_mode='zeros')
		self.c002b_2 = torch.nn.ReLU6()
		self.c002b_3 = torch.nn.BatchNorm1d(91)
		self.c002c_1 = torch.nn.Conv1d(91, 43, (1,), (1,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002c_2 = torch.nn.BatchNorm1d(43)
		self.c002d_1 = torch.nn.BatchNorm1d(43)
		self.c002e_1 = torch.nn.Conv1d(43, 28, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c002e_2 = torch.nn.ReLU6()
		self.c002e_3 = torch.nn.BatchNorm1d(28)
		self.c002f_1 = torch.nn.BatchNorm1d(28)
		self.c0030_1 = torch.nn.Conv1d(28, 16, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0030_2 = torch.nn.ReLU6()
		self.c0030_3 = torch.nn.BatchNorm1d(16)
		self.c0031_1 = torch.nn.Conv1d(16, 27, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0031_2 = torch.nn.ReLU6()
		self.c0031_3 = torch.nn.BatchNorm1d(27)
		self.c0032_1 = torch.nn.Conv1d(27, 52, (2,), (2,), (0,), (1,), 1, bias=True, padding_mode='zeros')
		self.c0032_2 = torch.nn.ReLU6()
		self.c0032_3 = torch.nn.BatchNorm1d(52)
		self.c0033_1 = torch.nn.Linear(52, 1, bias=True)
	def forward(self, r0001):
		import torch
		r0001 = r0001.view(-1, 14336)
		r0001 = self.c0000_3(self.c0000_2(self.c0000_1(r0001.view(-1, 56, 256)))).view(-1, 3840)
		r0001 = self.c0001_1(r0001.view(-1, 15, 256)).view(-1, 3840)
		r0001 = self.c0002_3(self.c0002_2(self.c0002_1(r0001.view(-1, 15, 256)))).view(-1, 2048)
		r0001 = self.c0003_1(r0001.view(-1, 16, 128)).view(-1, 2048)
		r0001 = self.c0004_3(self.c0004_2(self.c0004_1(r0001.view(-1, 16, 128)))).view(-1, 1024)
		r0001 = self.c0005_1(r0001.view(-1, 16, 64)).view(-1, 1024)
		r0002 = self.c0006_3(self.c0006_2(self.c0006_1(r0001.view(-1, 16, 64)))).view(-1, 3328)
		r0002 = self.c0007_3(self.c0007_2(self.c0007_1(r0002.view(-1, 52, 64)))).view(-1, 3328)
		r0002 = self.c0008_2(self.c0008_1(r0002.view(-1, 52, 64))).view(-1, 1024)
		r0002 = self.c0009_1((r0001 + r0002).view(-1, 16, 64)).view(-1, 1024)
		r0001 = self.c000a_3(self.c000a_2(self.c000a_1(r0002.view(-1, 16, 64)))).view(-1, 1408)
		r0001 = self.c000b_3(self.c000b_2(self.c000b_1(r0001.view(-1, 22, 64)))).view(-1, 1408)
		r0001 = self.c000c_2(self.c000c_1(r0001.view(-1, 22, 64))).view(-1, 1024)
		r0001 = self.c000d_1((r0002 + r0001).view(-1, 16, 64)).view(-1, 1024)
		r0001 = self.c000e_3(self.c000e_2(self.c000e_1(r0001.view(-1, 16, 64)))).view(-1, 896)
		r0001 = self.c000f_1(r0001.view(-1, 28, 32)).view(-1, 896)
		r0002 = self.c0010_3(self.c0010_2(self.c0010_1(r0001.view(-1, 28, 32)))).view(-1, 992)
		r0002 = self.c0011_3(self.c0011_2(self.c0011_1(r0002.view(-1, 31, 32)))).view(-1, 992)
		r0002 = self.c0012_2(self.c0012_1(r0002.view(-1, 31, 32))).view(-1, 896)
		r0002 = self.c0013_1((r0001 + r0002).view(-1, 28, 32)).view(-1, 896)
		r0001 = self.c0014_3(self.c0014_2(self.c0014_1(r0002.view(-1, 28, 32)))).view(-1, 1120)
		r0001 = self.c0015_3(self.c0015_2(self.c0015_1(r0001.view(-1, 35, 32)))).view(-1, 1120)
		r0001 = self.c0016_2(self.c0016_1(r0001.view(-1, 35, 32))).view(-1, 896)
		r0001 = self.c0017_1((r0002 + r0001).view(-1, 28, 32)).view(-1, 896)
		r0002 = self.c0018_3(self.c0018_2(self.c0018_1(r0001.view(-1, 28, 32)))).view(-1, 2112)
		r0002 = self.c0019_3(self.c0019_2(self.c0019_1(r0002.view(-1, 66, 32)))).view(-1, 2112)
		r0002 = self.c001a_2(self.c001a_1(r0002.view(-1, 66, 32))).view(-1, 896)
		r0002 = self.c001b_1((r0001 + r0002).view(-1, 28, 32)).view(-1, 896)
		r0002 = self.c001c_3(self.c001c_2(self.c001c_1(r0002.view(-1, 28, 32)))).view(-1, 688)
		r0002 = self.c001d_1(r0002.view(-1, 43, 16)).view(-1, 688)
		r0001 = self.c001e_3(self.c001e_2(self.c001e_1(r0002.view(-1, 43, 16)))).view(-1, 1280)
		r0001 = self.c001f_3(self.c001f_2(self.c001f_1(r0001.view(-1, 80, 16)))).view(-1, 1280)
		r0001 = self.c0020_2(self.c0020_1(r0001.view(-1, 80, 16))).view(-1, 688)
		r0001 = self.c0021_1((r0002 + r0001).view(-1, 43, 16)).view(-1, 688)
		r0002 = self.c0022_3(self.c0022_2(self.c0022_1(r0001.view(-1, 43, 16)))).view(-1, 1392)
		r0002 = self.c0023_3(self.c0023_2(self.c0023_1(r0002.view(-1, 87, 16)))).view(-1, 1392)
		r0002 = self.c0024_2(self.c0024_1(r0002.view(-1, 87, 16))).view(-1, 688)
		r0002 = self.c0025_1((r0001 + r0002).view(-1, 43, 16)).view(-1, 688)
		r0001 = self.c0026_3(self.c0026_2(self.c0026_1(r0002.view(-1, 43, 16)))).view(-1, 2240)
		r0001 = self.c0027_3(self.c0027_2(self.c0027_1(r0001.view(-1, 140, 16)))).view(-1, 2240)
		r0001 = self.c0028_2(self.c0028_1(r0001.view(-1, 140, 16))).view(-1, 688)
		r0001 = self.c0029_1((r0002 + r0001).view(-1, 43, 16)).view(-1, 688)
		r0002 = self.c002a_3(self.c002a_2(self.c002a_1(r0001.view(-1, 43, 16)))).view(-1, 1456)
		r0002 = self.c002b_3(self.c002b_2(self.c002b_1(r0002.view(-1, 91, 16)))).view(-1, 1456)
		r0002 = self.c002c_2(self.c002c_1(r0002.view(-1, 91, 16))).view(-1, 688)
		r0002 = self.c002d_1((r0001 + r0002).view(-1, 43, 16)).view(-1, 688)
		r0002 = self.c002e_3(self.c002e_2(self.c002e_1(r0002.view(-1, 43, 16)))).view(-1, 224)
		r0002 = self.c002f_1(r0002.view(-1, 28, 8)).view(-1, 224)
		r0002 = self.c0030_3(self.c0030_2(self.c0030_1(r0002.view(-1, 28, 8)))).view(-1, 64)
		r0002 = self.c0031_3(self.c0031_2(self.c0031_1(r0002.view(-1, 16, 4)))).view(-1, 54)
		r0002 = self.c0032_3(self.c0032_2(self.c0032_1(r0002.view(-1, 27, 2)))).view(-1, 52)
		r0002 = self.c0033_1(r0002)
		return r0002